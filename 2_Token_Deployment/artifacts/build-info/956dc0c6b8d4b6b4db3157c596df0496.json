{
	"id": "956dc0c6b8d4b6b4db3157c596df0496",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol": {
				"content": "\n// File: contracts/Zero2Hero_BNB/2_Token_Deployment/interface.sol\n\n\n\npragma solidity >0.4.0 <= 0.9.0;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () { }\n\n  function _msgSender() internal view returns (address) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor ()  {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n// File: contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol\n\n\n\npragma solidity ^0.8.0;\n\n\ncontract BEP20 is Context, IBEP20, Ownable {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n    uint8 public _decimals;\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor() public {\n        _name = \"Justtest Token\";\n        _symbol = \"JTT\";\n        _decimals = 18;\n        _totalSupply = 2250000 * 10**18;\n        _balances[msg.sender] = _totalSupply;\n\n        emit Transfer(address(0), msg.sender, _totalSupply);\n    }\n\n    function getOwner() external view override  returns (address) {\n        return owner();\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol": {
				"BEP20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11117:22737  contract BEP20 is Context, IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11618:11878  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9581:9598  address msgSender */\n  0x00\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9601:9613  _msgSender() */\n  tag_7\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9601:9611  _msgSender */\n  shl(0x20, tag_8)\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9601:9613  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9581:9613  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9628:9637  msgSender */\n  dup1\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9619:9625  _owner */\n  0x00\n  dup1\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9619:9637  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9681:9690  msgSender */\n  dup1\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9648:9691  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9677:9678  0 */\n  0x00\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9648:9691  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9575:9696  {... */\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11649:11673  _name = \"Justtest Token\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x4a7573747465737420546f6b656e000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11649:11654  _name */\n  0x05\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11649:11673  _name = \"Justtest Token\" */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11683:11698  _symbol = \"JTT\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4a54540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11683:11690  _symbol */\n  0x06\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11683:11698  _symbol = \"JTT\" */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11720:11722  18 */\n  0x12\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11708:11717  _decimals */\n  0x04\n  0x00\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11708:11722  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11747:11763  2250000 * 10**18 */\n  0x01dc74be914d16aa400000\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11732:11744  _totalSupply */\n  0x03\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11732:11763  _totalSupply = 2250000 * 10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11797:11809  _totalSupply */\n  sload(0x03)\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11773:11782  _balances */\n  0x01\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11773:11794  _balances[msg.sender] */\n  0x00\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11783:11793  msg.sender */\n  caller\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11773:11794  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11773:11809  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11846:11856  msg.sender */\n  caller\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11825:11871  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11842:11843  0 */\n  0x00\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11825:11871  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11858:11870  _totalSupply */\n  sload(0x03)\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11825:11871  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11117:22737  contract BEP20 is Context, IBEP20, Ownable {... */\n  jump(tag_15)\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3665:3747  function _msgSender() internal view returns (address) {... */\ntag_8:\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3710:3717  address */\n  0x00\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3732:3742  msg.sender */\n  caller\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3725:3742  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3665:3747  function _msgSender() internal view returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_17:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_18:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_19:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_20:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_43:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_45\n  tag_19\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":714:798   */\ntag_44:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_21:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_22:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_23:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_24:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_50\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_23\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1429:1468   */\n  tag_51\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_23\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_25:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_26:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_27:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_55\n    /* \"#utility.yul\":1818:1852   */\n  tag_56\n    /* \"#utility.yul\":1827:1851   */\n  tag_57\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_25\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1818:1852   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1800:1853   */\n  tag_25\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_28:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_29:\n    /* \"#utility.yul\":2056:2095   */\n  tag_60\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_27\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2117:2208   */\n  tag_61\n    /* \"#utility.yul\":2166:2207   */\n  tag_62\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_28\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_24\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_30:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_31:\n    /* \"#utility.yul\":2377:2409   */\n  tag_65\n  tag_30\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2418:2483   */\n  tag_66\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_29\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_32:\n    /* \"#utility.yul\":2555:2675   */\ntag_68:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_71\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_31\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_33:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_74\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2906:2935   */\n  tag_75\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_22\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_76:\n    /* \"#utility.yul\":3133:3213   */\n  tag_77\n    /* \"#utility.yul\":3189:3211   */\n  tag_78\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_22\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_32\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_73:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_34:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_35:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_81\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_34\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_36:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_83\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_35\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_11:\n    /* \"#utility.yul\":3950:3987   */\n  tag_85\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_17\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_87\n  tag_18\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4038:4094   */\ntag_86:\n    /* \"#utility.yul\":4118:4156   */\n  tag_88\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_20\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4203:4270   */\n  tag_89\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_33\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_91\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_92:\n    /* \"#utility.yul\":5144:5211   */\n  tag_93\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_36\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_90)\n    /* \"#utility.yul\":4365:4983   */\ntag_91:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_94\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_21\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_95:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_95)\ntag_97:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_99\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_35\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_98:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_90:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5352   */\ntag_37:\n    /* \"#utility.yul\":5321:5345   */\n  tag_101\n    /* \"#utility.yul\":5339:5344   */\n  dup2\n    /* \"#utility.yul\":5321:5345   */\n  tag_25\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5316:5319   */\n  dup3\n    /* \"#utility.yul\":5309:5346   */\n  mstore\n    /* \"#utility.yul\":5234:5352   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5358:5580   */\ntag_14:\n    /* \"#utility.yul\":5451:5455   */\n  0x00\n    /* \"#utility.yul\":5489:5491   */\n  0x20\n    /* \"#utility.yul\":5478:5487   */\n  dup3\n    /* \"#utility.yul\":5474:5492   */\n  add\n    /* \"#utility.yul\":5466:5492   */\n  swap1\n  pop\n    /* \"#utility.yul\":5502:5573   */\n  tag_103\n    /* \"#utility.yul\":5570:5571   */\n  0x00\n    /* \"#utility.yul\":5559:5568   */\n  dup4\n    /* \"#utility.yul\":5555:5572   */\n  add\n    /* \"#utility.yul\":5546:5552   */\n  dup5\n    /* \"#utility.yul\":5502:5573   */\n  tag_37\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5358:5580   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11117:22737  contract BEP20 is Context, IBEP20, Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11117:22737  contract BEP20 is Context, IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12042:12140  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14335:14532  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13146:13252  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15094:15350  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12988:13086  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11359:11381  uint8 public _decimals */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15745:15979  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13310:13435  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10347:10474  function renounceOwnership() public onlyOwner {... */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11884:11977  function getOwner() external view override  returns (address) {... */\n    tag_12:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9764:9835  function owner() public view returns (address) {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12253:12355  function symbol() public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16466:16893  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_15:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13631:13820  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13878:14027  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10613:10714  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12042:12140  function name() public view virtual override returns (string memory) {... */\n    tag_23:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12096:12109  string memory */\n      0x60\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12128:12133  _name */\n      0x05\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12121:12133  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12042:12140  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14335:14532  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_29:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14418:14422  bool */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14434:14447  address owner */\n      dup1\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14450:14462  _msgSender() */\n      tag_93\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14450:14460  _msgSender */\n      tag_94\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14450:14462  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14434:14462  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14472:14504  _approve(owner, spender, amount) */\n      tag_95\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14481:14486  owner */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14488:14495  spender */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14497:14503  amount */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14472:14480  _approve */\n      tag_96\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14472:14504  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14521:14525  true */\n      0x01\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14514:14525  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14335:14532  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13146:13252  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_33:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13207:13214  uint256 */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13233:13245  _totalSupply */\n      sload(0x03)\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13226:13245  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13146:13252  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15094:15350  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_39:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15191:15195  bool */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15207:15222  address spender */\n      dup1\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15225:15237  _msgSender() */\n      tag_99\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15225:15235  _msgSender */\n      tag_94\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15225:15237  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15207:15237  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15247:15285  _spendAllowance(from, spender, amount) */\n      tag_100\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15263:15267  from */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15269:15276  spender */\n      dup3\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15278:15284  amount */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15247:15262  _spendAllowance */\n      tag_101\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15247:15285  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15295:15322  _transfer(from, to, amount) */\n      tag_102\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15305:15309  from */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15311:15313  to */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15315:15321  amount */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15295:15304  _transfer */\n      tag_103\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15295:15322  _transfer(from, to, amount) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15339:15343  true */\n      0x01\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15332:15343  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15094:15350  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12988:13086  function decimals() public view virtual override returns (uint8) {... */\n    tag_42:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13046:13051  uint8 */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13070:13079  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13063:13079  return _decimals */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12988:13086  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11359:11381  uint8 public _decimals */\n    tag_46:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15745:15979  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_50:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15833:15837  bool */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15849:15862  address owner */\n      dup1\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15865:15877  _msgSender() */\n      tag_106\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15865:15875  _msgSender */\n      tag_94\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15865:15877  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15849:15877  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15887:15951  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_107\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15896:15901  owner */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15903:15910  spender */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15940:15950  addedValue */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15912:15937  allowance(owner, spender) */\n      tag_108\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15922:15927  owner */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15929:15936  spender */\n      dup10\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15912:15921  allowance */\n      tag_80\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15912:15937  allowance(owner, spender) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15912:15950  allowance(owner, spender) + addedValue */\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15887:15895  _approve */\n      tag_96\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15887:15951  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_107:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15968:15972  true */\n      0x01\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15961:15972  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":15745:15979  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13310:13435  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_55:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13384:13391  uint256 */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13410:13419  _balances */\n      0x01\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13410:13428  _balances[account] */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13420:13427  account */\n      dup4\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13410:13428  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13403:13428  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13310:13435  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10347:10474  function renounceOwnership() public onlyOwner {... */\n    tag_58:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9960:9972  _msgSender() */\n      tag_113\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9960:9970  _msgSender */\n      tag_94\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9960:9972  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9950:9972  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9950:9956  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9950:9972  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9942:10009  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10441:10442  0 */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10404:10444  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10425:10431  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10404:10444  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10467:10468  0 */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10450:10456  _owner */\n      dup1\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10450:10469  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10347:10474  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11884:11977  function getOwner() external view override  returns (address) {... */\n    tag_60:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11937:11944  address */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11963:11970  owner() */\n      tag_119\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11963:11968  owner */\n      tag_64\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11963:11970  owner() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11956:11970  return owner() */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11884:11977  function getOwner() external view override  returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9764:9835  function owner() public view returns (address) {... */\n    tag_64:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9802:9809  address */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9824:9830  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9817:9830  return _owner */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9764:9835  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12253:12355  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12309:12322  string memory */\n      0x60\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12341:12348  _symbol */\n      0x06\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12334:12348  return _symbol */\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_87\n      jump\t// in\n    tag_122:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_87\n      jump\t// in\n    tag_123:\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_125\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_124)\n    tag_125:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_126:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_126\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":12253:12355  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16466:16893  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_71:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16559:16563  bool */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16575:16588  address owner */\n      dup1\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16591:16603  _msgSender() */\n      tag_128\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16591:16601  _msgSender */\n      tag_94\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16591:16603  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16575:16603  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16613:16637  uint256 currentAllowance */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16640:16665  allowance(owner, spender) */\n      tag_129\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16650:16655  owner */\n      dup3\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16657:16664  spender */\n      dup7\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16640:16649  allowance */\n      tag_80\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16640:16665  allowance(owner, spender) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16613:16665  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16703:16718  subtractedValue */\n      dup4\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16683:16699  currentAllowance */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16683:16718  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16675:16760  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16794:16854  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_133\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16803:16808  owner */\n      dup3\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16810:16817  spender */\n      dup7\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16838:16853  subtractedValue */\n      dup7\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16819:16835  currentAllowance */\n      dup5\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16819:16853  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16794:16802  _approve */\n      tag_96\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16794:16854  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16882:16886  true */\n      0x01\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16875:16886  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":16466:16893  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13631:13820  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_75:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13710:13714  bool */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13726:13739  address owner */\n      dup1\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13742:13754  _msgSender() */\n      tag_135\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13742:13752  _msgSender */\n      tag_94\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13742:13754  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13726:13754  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13764:13792  _transfer(owner, to, amount) */\n      tag_136\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13774:13779  owner */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13781:13783  to */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13785:13791  amount */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13764:13773  _transfer */\n      tag_103\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13764:13792  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13809:13813  true */\n      0x01\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13802:13813  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13631:13820  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13878:14027  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_80:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13967:13974  uint256 */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13993:14004  _allowances */\n      0x02\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13993:14011  _allowances[owner] */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14005:14010  owner */\n      dup5\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13993:14011  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13993:14020  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":14012:14019  spender */\n      dup4\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13993:14020  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13986:14020  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":13878:14027  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10613:10714  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_84:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9960:9972  _msgSender() */\n      tag_139\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9960:9970  _msgSender */\n      tag_94\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9960:9972  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9950:9972  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9950:9956  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9950:9972  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9942:10009  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_116\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10681:10709  _transferOwnership(newOwner) */\n      tag_143\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10700:10708  newOwner */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10681:10699  _transferOwnership */\n      tag_144\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10681:10709  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10613:10714  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3665:3747  function _msgSender() internal view returns (address) {... */\n    tag_94:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3710:3717  address */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3732:3742  msg.sender */\n      caller\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3725:3742  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3665:3747  function _msgSender() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20348:20688  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_96:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20466:20467  0 */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20449:20468  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20449:20454  owner */\n      dup4\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20449:20468  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20441:20509  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20546:20547  0 */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20527:20548  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20527:20534  spender */\n      dup3\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20527:20548  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20519:20587  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20628:20634  amount */\n      dup1\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20598:20609  _allowances */\n      0x02\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20598:20616  _allowances[owner] */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20610:20615  owner */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20598:20616  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20598:20625  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20617:20624  spender */\n      dup5\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20598:20625  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20598:20634  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20665:20672  spender */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20649:20681  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20658:20663  owner */\n      dup4\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20649:20681  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20674:20680  amount */\n      dup4\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20649:20681  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20348:20688  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20969:21380  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_101:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21069:21093  uint256 currentAllowance */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21096:21121  allowance(owner, spender) */\n      tag_155\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21106:21111  owner */\n      dup5\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21113:21120  spender */\n      dup5\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21096:21105  allowance */\n      tag_80\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21096:21121  allowance(owner, spender) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21069:21121  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21155:21172  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21135:21151  currentAllowance */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21135:21172  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21131:21374  if (currentAllowance != type(uint256).max) {... */\n      tag_156\n      jumpi\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21216:21222  amount */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21196:21212  currentAllowance */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21196:21222  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21188:21256  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21298:21349  _approve(owner, spender, currentAllowance - amount) */\n      tag_160\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21307:21312  owner */\n      dup5\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21314:21321  spender */\n      dup5\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21342:21348  amount */\n      dup5\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21323:21339  currentAllowance */\n      dup5\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21323:21348  currentAllowance - amount */\n      sub\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21298:21306  _approve */\n      tag_96\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21298:21349  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21131:21374  if (currentAllowance != type(uint256).max) {... */\n    tag_156:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21059:21380  {... */\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":20969:21380  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17347:18135  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_103:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17459:17460  0 */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17443:17461  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17443:17447  from */\n      dup4\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17443:17461  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17435:17503  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17535:17536  0 */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17521:17537  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17521:17523  to */\n      dup3\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17521:17537  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17513:17577  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17588:17626  _beforeTokenTransfer(from, to, amount) */\n      tag_168\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17609:17613  from */\n      dup4\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17615:17617  to */\n      dup4\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17619:17625  amount */\n      dup4\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17588:17608  _beforeTokenTransfer */\n      tag_169\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17588:17626  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17637:17656  uint256 fromBalance */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17659:17668  _balances */\n      0x01\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17659:17674  _balances[from] */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17669:17673  from */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17659:17674  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17637:17674  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17707:17713  amount */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17692:17703  fromBalance */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17692:17713  fromBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17684:17756  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17822:17828  amount */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17808:17819  fromBalance */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17808:17828  fromBalance - amount */\n      sub\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17790:17799  _balances */\n      0x01\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17790:17805  _balances[from] */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17800:17804  from */\n      dup7\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17790:17805  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17790:17828  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18022:18028  amount */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18005:18014  _balances */\n      0x01\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18005:18018  _balances[to] */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18015:18017  to */\n      dup6\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18005:18018  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18005:18028  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18069:18071  to */\n      dup3\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18054:18080  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18063:18067  from */\n      dup5\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18054:18080  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18073:18079  amount */\n      dup5\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18054:18080  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18091:18128  _afterTokenTransfer(from, to, amount) */\n      tag_174\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18111:18115  from */\n      dup5\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18117:18119  to */\n      dup5\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18121:18127  amount */\n      dup5\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18091:18110  _afterTokenTransfer */\n      tag_175\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":18091:18128  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17425:18135  {... */\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":17347:18135  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10807:11018  function _transferOwnership(address newOwner) internal {... */\n    tag_144:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10896:10897  0 */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10876:10898  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10876:10884  newOwner */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10876:10898  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10868:10941  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10981:10989  newOwner */\n      dup1\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10952:10990  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10973:10979  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10952:10990  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11005:11013  newOwner */\n      dup1\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10996:11002  _owner */\n      0x00\n      dup1\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10996:11013  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10807:11018  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":21964:22055  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_169:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":22643:22733  function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_175:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_182:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_183:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_184:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_227:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_227)\n    tag_229:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_185:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_186:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_232\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_182\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":818:889   */\n      tag_233\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_183\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_234\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_184\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":988:1017   */\n      tag_235\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_185\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_25:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_237\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_186\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_188:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_190:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_191:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_243\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_190\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_192:\n        /* \"#utility.yul\":1983:2007   */\n      tag_245\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_191\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_246:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_193:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_248\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_192\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_194:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_195:\n        /* \"#utility.yul\":2339:2363   */\n      tag_251\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_194\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_252:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_196:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_254\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_195\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_28:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_257\n      tag_188\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2632:2751   */\n    tag_256:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_258\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_193\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_259\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_196\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_197:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_198:\n        /* \"#utility.yul\":3196:3217   */\n      tag_262\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_197\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_31:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_264\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_198\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_199:\n        /* \"#utility.yul\":3533:3557   */\n      tag_266\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_194\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_35:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_268\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_199\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_38:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_271\n      tag_188\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3908:4027   */\n    tag_270:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_272\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_193\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_273\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_193\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_274\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_196\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_200:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_201:\n        /* \"#utility.yul\":4598:4620   */\n      tag_277\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_200\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_44:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_279\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_201\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_54:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_282\n      tag_188\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4929:5048   */\n    tag_281:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_283\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_193\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5306   */\n    tag_202:\n        /* \"#utility.yul\":5275:5299   */\n      tag_285\n        /* \"#utility.yul\":5293:5298   */\n      dup2\n        /* \"#utility.yul\":5275:5299   */\n      tag_191\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5263:5300   */\n      mstore\n        /* \"#utility.yul\":5188:5306   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5312:5534   */\n    tag_62:\n        /* \"#utility.yul\":5405:5409   */\n      0x00\n        /* \"#utility.yul\":5443:5445   */\n      0x20\n        /* \"#utility.yul\":5432:5441   */\n      dup3\n        /* \"#utility.yul\":5428:5446   */\n      add\n        /* \"#utility.yul\":5420:5446   */\n      swap1\n      pop\n        /* \"#utility.yul\":5456:5527   */\n      tag_287\n        /* \"#utility.yul\":5524:5525   */\n      0x00\n        /* \"#utility.yul\":5513:5522   */\n      dup4\n        /* \"#utility.yul\":5509:5526   */\n      add\n        /* \"#utility.yul\":5500:5506   */\n      dup5\n        /* \"#utility.yul\":5456:5527   */\n      tag_202\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5312:5534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:6014   */\n    tag_79:\n        /* \"#utility.yul\":5608:5614   */\n      0x00\n        /* \"#utility.yul\":5616:5622   */\n      dup1\n        /* \"#utility.yul\":5665:5667   */\n      0x40\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5644:5651   */\n      dup6\n        /* \"#utility.yul\":5640:5663   */\n      sub\n        /* \"#utility.yul\":5636:5668   */\n      slt\n        /* \"#utility.yul\":5633:5752   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":5671:5750   */\n      tag_290\n      tag_188\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":5633:5752   */\n    tag_289:\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5816:5869   */\n      tag_291\n        /* \"#utility.yul\":5861:5868   */\n      dup6\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5841:5850   */\n      dup7\n        /* \"#utility.yul\":5837:5859   */\n      add\n        /* \"#utility.yul\":5816:5869   */\n      tag_193\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5806:5869   */\n      swap3\n      pop\n        /* \"#utility.yul\":5762:5879   */\n      pop\n        /* \"#utility.yul\":5918:5920   */\n      0x20\n        /* \"#utility.yul\":5944:5997   */\n      tag_292\n        /* \"#utility.yul\":5989:5996   */\n      dup6\n        /* \"#utility.yul\":5980:5986   */\n      dup3\n        /* \"#utility.yul\":5969:5978   */\n      dup7\n        /* \"#utility.yul\":5965:5987   */\n      add\n        /* \"#utility.yul\":5944:5997   */\n      tag_193\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5934:5997   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:6007   */\n      pop\n        /* \"#utility.yul\":5540:6014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6200   */\n    tag_203:\n        /* \"#utility.yul\":6068:6145   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6058:6146   */\n      mstore\n        /* \"#utility.yul\":6165:6169   */\n      0x22\n        /* \"#utility.yul\":6162:6163   */\n      0x04\n        /* \"#utility.yul\":6155:6170   */\n      mstore\n        /* \"#utility.yul\":6189:6193   */\n      0x24\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6179:6194   */\n      revert\n        /* \"#utility.yul\":6206:6526   */\n    tag_87:\n        /* \"#utility.yul\":6250:6256   */\n      0x00\n        /* \"#utility.yul\":6287:6288   */\n      0x02\n        /* \"#utility.yul\":6281:6285   */\n      dup3\n        /* \"#utility.yul\":6277:6289   */\n      div\n        /* \"#utility.yul\":6267:6289   */\n      swap1\n      pop\n        /* \"#utility.yul\":6334:6335   */\n      0x01\n        /* \"#utility.yul\":6328:6332   */\n      dup3\n        /* \"#utility.yul\":6324:6336   */\n      and\n        /* \"#utility.yul\":6355:6373   */\n      dup1\n        /* \"#utility.yul\":6345:6426   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":6411:6415   */\n      0x7f\n        /* \"#utility.yul\":6403:6409   */\n      dup3\n        /* \"#utility.yul\":6399:6416   */\n      and\n        /* \"#utility.yul\":6389:6416   */\n      swap2\n      pop\n        /* \"#utility.yul\":6345:6426   */\n    tag_295:\n        /* \"#utility.yul\":6473:6475   */\n      0x20\n        /* \"#utility.yul\":6465:6471   */\n      dup3\n        /* \"#utility.yul\":6462:6476   */\n      lt\n        /* \"#utility.yul\":6442:6460   */\n      dup2\n        /* \"#utility.yul\":6439:6477   */\n      sub\n        /* \"#utility.yul\":6436:6520   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":6492:6510   */\n      tag_297\n      tag_203\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":6436:6520   */\n    tag_296:\n        /* \"#utility.yul\":6257:6526   */\n      pop\n        /* \"#utility.yul\":6206:6526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6712   */\n    tag_204:\n        /* \"#utility.yul\":6580:6657   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6577:6578   */\n      0x00\n        /* \"#utility.yul\":6570:6658   */\n      mstore\n        /* \"#utility.yul\":6677:6681   */\n      0x11\n        /* \"#utility.yul\":6674:6675   */\n      0x04\n        /* \"#utility.yul\":6667:6682   */\n      mstore\n        /* \"#utility.yul\":6701:6705   */\n      0x24\n        /* \"#utility.yul\":6698:6699   */\n      0x00\n        /* \"#utility.yul\":6691:6706   */\n      revert\n        /* \"#utility.yul\":6718:6909   */\n    tag_110:\n        /* \"#utility.yul\":6758:6761   */\n      0x00\n        /* \"#utility.yul\":6777:6797   */\n      tag_300\n        /* \"#utility.yul\":6795:6796   */\n      dup3\n        /* \"#utility.yul\":6777:6797   */\n      tag_194\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":6772:6797   */\n      swap2\n      pop\n        /* \"#utility.yul\":6811:6831   */\n      tag_301\n        /* \"#utility.yul\":6829:6830   */\n      dup4\n        /* \"#utility.yul\":6811:6831   */\n      tag_194\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":6806:6831   */\n      swap3\n      pop\n        /* \"#utility.yul\":6854:6855   */\n      dup3\n        /* \"#utility.yul\":6851:6852   */\n      dup3\n        /* \"#utility.yul\":6847:6856   */\n      add\n        /* \"#utility.yul\":6840:6856   */\n      swap1\n      pop\n        /* \"#utility.yul\":6875:6878   */\n      dup1\n        /* \"#utility.yul\":6872:6873   */\n      dup3\n        /* \"#utility.yul\":6869:6879   */\n      gt\n        /* \"#utility.yul\":6866:6902   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":6882:6900   */\n      tag_303\n      tag_204\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6866:6902   */\n    tag_302:\n        /* \"#utility.yul\":6718:6909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6915:7097   */\n    tag_205:\n        /* \"#utility.yul\":7055:7089   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7051:7052   */\n      0x00\n        /* \"#utility.yul\":7043:7049   */\n      dup3\n        /* \"#utility.yul\":7039:7053   */\n      add\n        /* \"#utility.yul\":7032:7090   */\n      mstore\n        /* \"#utility.yul\":6915:7097   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7103:7469   */\n    tag_206:\n        /* \"#utility.yul\":7245:7248   */\n      0x00\n        /* \"#utility.yul\":7266:7333   */\n      tag_306\n        /* \"#utility.yul\":7330:7332   */\n      0x20\n        /* \"#utility.yul\":7325:7328   */\n      dup4\n        /* \"#utility.yul\":7266:7333   */\n      tag_183\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7259:7333   */\n      swap2\n      pop\n        /* \"#utility.yul\":7342:7435   */\n      tag_307\n        /* \"#utility.yul\":7431:7434   */\n      dup3\n        /* \"#utility.yul\":7342:7435   */\n      tag_205\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7460:7462   */\n      0x20\n        /* \"#utility.yul\":7455:7458   */\n      dup3\n        /* \"#utility.yul\":7451:7463   */\n      add\n        /* \"#utility.yul\":7444:7463   */\n      swap1\n      pop\n        /* \"#utility.yul\":7103:7469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7475:7894   */\n    tag_116:\n        /* \"#utility.yul\":7641:7645   */\n      0x00\n        /* \"#utility.yul\":7679:7681   */\n      0x20\n        /* \"#utility.yul\":7668:7677   */\n      dup3\n        /* \"#utility.yul\":7664:7682   */\n      add\n        /* \"#utility.yul\":7656:7682   */\n      swap1\n      pop\n        /* \"#utility.yul\":7728:7737   */\n      dup2\n        /* \"#utility.yul\":7722:7726   */\n      dup2\n        /* \"#utility.yul\":7718:7738   */\n      sub\n        /* \"#utility.yul\":7714:7715   */\n      0x00\n        /* \"#utility.yul\":7703:7712   */\n      dup4\n        /* \"#utility.yul\":7699:7716   */\n      add\n        /* \"#utility.yul\":7692:7739   */\n      mstore\n        /* \"#utility.yul\":7756:7887   */\n      tag_309\n        /* \"#utility.yul\":7882:7886   */\n      dup2\n        /* \"#utility.yul\":7756:7887   */\n      tag_206\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7748:7887   */\n      swap1\n      pop\n        /* \"#utility.yul\":7475:7894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7900:8124   */\n    tag_207:\n        /* \"#utility.yul\":8040:8074   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":8036:8037   */\n      0x00\n        /* \"#utility.yul\":8028:8034   */\n      dup3\n        /* \"#utility.yul\":8024:8038   */\n      add\n        /* \"#utility.yul\":8017:8075   */\n      mstore\n        /* \"#utility.yul\":8109:8116   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8104:8106   */\n      0x20\n        /* \"#utility.yul\":8096:8102   */\n      dup3\n        /* \"#utility.yul\":8092:8107   */\n      add\n        /* \"#utility.yul\":8085:8117   */\n      mstore\n        /* \"#utility.yul\":7900:8124   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8130:8496   */\n    tag_208:\n        /* \"#utility.yul\":8272:8275   */\n      0x00\n        /* \"#utility.yul\":8293:8360   */\n      tag_312\n        /* \"#utility.yul\":8357:8359   */\n      0x25\n        /* \"#utility.yul\":8352:8355   */\n      dup4\n        /* \"#utility.yul\":8293:8360   */\n      tag_183\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":8286:8360   */\n      swap2\n      pop\n        /* \"#utility.yul\":8369:8462   */\n      tag_313\n        /* \"#utility.yul\":8458:8461   */\n      dup3\n        /* \"#utility.yul\":8369:8462   */\n      tag_207\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":8487:8489   */\n      0x40\n        /* \"#utility.yul\":8482:8485   */\n      dup3\n        /* \"#utility.yul\":8478:8490   */\n      add\n        /* \"#utility.yul\":8471:8490   */\n      swap1\n      pop\n        /* \"#utility.yul\":8130:8496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8502:8921   */\n    tag_132:\n        /* \"#utility.yul\":8668:8672   */\n      0x00\n        /* \"#utility.yul\":8706:8708   */\n      0x20\n        /* \"#utility.yul\":8695:8704   */\n      dup3\n        /* \"#utility.yul\":8691:8709   */\n      add\n        /* \"#utility.yul\":8683:8709   */\n      swap1\n      pop\n        /* \"#utility.yul\":8755:8764   */\n      dup2\n        /* \"#utility.yul\":8749:8753   */\n      dup2\n        /* \"#utility.yul\":8745:8765   */\n      sub\n        /* \"#utility.yul\":8741:8742   */\n      0x00\n        /* \"#utility.yul\":8730:8739   */\n      dup4\n        /* \"#utility.yul\":8726:8743   */\n      add\n        /* \"#utility.yul\":8719:8766   */\n      mstore\n        /* \"#utility.yul\":8783:8914   */\n      tag_315\n        /* \"#utility.yul\":8909:8913   */\n      dup2\n        /* \"#utility.yul\":8783:8914   */\n      tag_208\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":8775:8914   */\n      swap1\n      pop\n        /* \"#utility.yul\":8502:8921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8927:9150   */\n    tag_209:\n        /* \"#utility.yul\":9067:9101   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":9063:9064   */\n      0x00\n        /* \"#utility.yul\":9055:9061   */\n      dup3\n        /* \"#utility.yul\":9051:9065   */\n      add\n        /* \"#utility.yul\":9044:9102   */\n      mstore\n        /* \"#utility.yul\":9136:9142   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9131:9133   */\n      0x20\n        /* \"#utility.yul\":9123:9129   */\n      dup3\n        /* \"#utility.yul\":9119:9134   */\n      add\n        /* \"#utility.yul\":9112:9143   */\n      mstore\n        /* \"#utility.yul\":8927:9150   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9156:9522   */\n    tag_210:\n        /* \"#utility.yul\":9298:9301   */\n      0x00\n        /* \"#utility.yul\":9319:9386   */\n      tag_318\n        /* \"#utility.yul\":9383:9385   */\n      0x24\n        /* \"#utility.yul\":9378:9381   */\n      dup4\n        /* \"#utility.yul\":9319:9386   */\n      tag_183\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":9312:9386   */\n      swap2\n      pop\n        /* \"#utility.yul\":9395:9488   */\n      tag_319\n        /* \"#utility.yul\":9484:9487   */\n      dup3\n        /* \"#utility.yul\":9395:9488   */\n      tag_209\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":9513:9515   */\n      0x40\n        /* \"#utility.yul\":9508:9511   */\n      dup3\n        /* \"#utility.yul\":9504:9516   */\n      add\n        /* \"#utility.yul\":9497:9516   */\n      swap1\n      pop\n        /* \"#utility.yul\":9156:9522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9528:9947   */\n    tag_149:\n        /* \"#utility.yul\":9694:9698   */\n      0x00\n        /* \"#utility.yul\":9732:9734   */\n      0x20\n        /* \"#utility.yul\":9721:9730   */\n      dup3\n        /* \"#utility.yul\":9717:9735   */\n      add\n        /* \"#utility.yul\":9709:9735   */\n      swap1\n      pop\n        /* \"#utility.yul\":9781:9790   */\n      dup2\n        /* \"#utility.yul\":9775:9779   */\n      dup2\n        /* \"#utility.yul\":9771:9791   */\n      sub\n        /* \"#utility.yul\":9767:9768   */\n      0x00\n        /* \"#utility.yul\":9756:9765   */\n      dup4\n        /* \"#utility.yul\":9752:9769   */\n      add\n        /* \"#utility.yul\":9745:9792   */\n      mstore\n        /* \"#utility.yul\":9809:9940   */\n      tag_321\n        /* \"#utility.yul\":9935:9939   */\n      dup2\n        /* \"#utility.yul\":9809:9940   */\n      tag_210\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":9801:9940   */\n      swap1\n      pop\n        /* \"#utility.yul\":9528:9947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9953:10174   */\n    tag_211:\n        /* \"#utility.yul\":10093:10127   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":10089:10090   */\n      0x00\n        /* \"#utility.yul\":10081:10087   */\n      dup3\n        /* \"#utility.yul\":10077:10091   */\n      add\n        /* \"#utility.yul\":10070:10128   */\n      mstore\n        /* \"#utility.yul\":10162:10166   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10157:10159   */\n      0x20\n        /* \"#utility.yul\":10149:10155   */\n      dup3\n        /* \"#utility.yul\":10145:10160   */\n      add\n        /* \"#utility.yul\":10138:10167   */\n      mstore\n        /* \"#utility.yul\":9953:10174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10180:10546   */\n    tag_212:\n        /* \"#utility.yul\":10322:10325   */\n      0x00\n        /* \"#utility.yul\":10343:10410   */\n      tag_324\n        /* \"#utility.yul\":10407:10409   */\n      0x22\n        /* \"#utility.yul\":10402:10405   */\n      dup4\n        /* \"#utility.yul\":10343:10410   */\n      tag_183\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":10336:10410   */\n      swap2\n      pop\n        /* \"#utility.yul\":10419:10512   */\n      tag_325\n        /* \"#utility.yul\":10508:10511   */\n      dup3\n        /* \"#utility.yul\":10419:10512   */\n      tag_211\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":10537:10539   */\n      0x40\n        /* \"#utility.yul\":10532:10535   */\n      dup3\n        /* \"#utility.yul\":10528:10540   */\n      add\n        /* \"#utility.yul\":10521:10540   */\n      swap1\n      pop\n        /* \"#utility.yul\":10180:10546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10552:10971   */\n    tag_152:\n        /* \"#utility.yul\":10718:10722   */\n      0x00\n        /* \"#utility.yul\":10756:10758   */\n      0x20\n        /* \"#utility.yul\":10745:10754   */\n      dup3\n        /* \"#utility.yul\":10741:10759   */\n      add\n        /* \"#utility.yul\":10733:10759   */\n      swap1\n      pop\n        /* \"#utility.yul\":10805:10814   */\n      dup2\n        /* \"#utility.yul\":10799:10803   */\n      dup2\n        /* \"#utility.yul\":10795:10815   */\n      sub\n        /* \"#utility.yul\":10791:10792   */\n      0x00\n        /* \"#utility.yul\":10780:10789   */\n      dup4\n        /* \"#utility.yul\":10776:10793   */\n      add\n        /* \"#utility.yul\":10769:10816   */\n      mstore\n        /* \"#utility.yul\":10833:10964   */\n      tag_327\n        /* \"#utility.yul\":10959:10963   */\n      dup2\n        /* \"#utility.yul\":10833:10964   */\n      tag_212\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":10825:10964   */\n      swap1\n      pop\n        /* \"#utility.yul\":10552:10971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10977:11156   */\n    tag_213:\n        /* \"#utility.yul\":11117:11148   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":11113:11114   */\n      0x00\n        /* \"#utility.yul\":11105:11111   */\n      dup3\n        /* \"#utility.yul\":11101:11115   */\n      add\n        /* \"#utility.yul\":11094:11149   */\n      mstore\n        /* \"#utility.yul\":10977:11156   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11162:11528   */\n    tag_214:\n        /* \"#utility.yul\":11304:11307   */\n      0x00\n        /* \"#utility.yul\":11325:11392   */\n      tag_330\n        /* \"#utility.yul\":11389:11391   */\n      0x1d\n        /* \"#utility.yul\":11384:11387   */\n      dup4\n        /* \"#utility.yul\":11325:11392   */\n      tag_183\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":11318:11392   */\n      swap2\n      pop\n        /* \"#utility.yul\":11401:11494   */\n      tag_331\n        /* \"#utility.yul\":11490:11493   */\n      dup3\n        /* \"#utility.yul\":11401:11494   */\n      tag_213\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":11519:11521   */\n      0x20\n        /* \"#utility.yul\":11514:11517   */\n      dup3\n        /* \"#utility.yul\":11510:11522   */\n      add\n        /* \"#utility.yul\":11503:11522   */\n      swap1\n      pop\n        /* \"#utility.yul\":11162:11528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11534:11953   */\n    tag_159:\n        /* \"#utility.yul\":11700:11704   */\n      0x00\n        /* \"#utility.yul\":11738:11740   */\n      0x20\n        /* \"#utility.yul\":11727:11736   */\n      dup3\n        /* \"#utility.yul\":11723:11741   */\n      add\n        /* \"#utility.yul\":11715:11741   */\n      swap1\n      pop\n        /* \"#utility.yul\":11787:11796   */\n      dup2\n        /* \"#utility.yul\":11781:11785   */\n      dup2\n        /* \"#utility.yul\":11777:11797   */\n      sub\n        /* \"#utility.yul\":11773:11774   */\n      0x00\n        /* \"#utility.yul\":11762:11771   */\n      dup4\n        /* \"#utility.yul\":11758:11775   */\n      add\n        /* \"#utility.yul\":11751:11798   */\n      mstore\n        /* \"#utility.yul\":11815:11946   */\n      tag_333\n        /* \"#utility.yul\":11941:11945   */\n      dup2\n        /* \"#utility.yul\":11815:11946   */\n      tag_214\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":11807:11946   */\n      swap1\n      pop\n        /* \"#utility.yul\":11534:11953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11959:12183   */\n    tag_215:\n        /* \"#utility.yul\":12099:12133   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":12095:12096   */\n      0x00\n        /* \"#utility.yul\":12087:12093   */\n      dup3\n        /* \"#utility.yul\":12083:12097   */\n      add\n        /* \"#utility.yul\":12076:12134   */\n      mstore\n        /* \"#utility.yul\":12168:12175   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12163:12165   */\n      0x20\n        /* \"#utility.yul\":12155:12161   */\n      dup3\n        /* \"#utility.yul\":12151:12166   */\n      add\n        /* \"#utility.yul\":12144:12176   */\n      mstore\n        /* \"#utility.yul\":11959:12183   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12189:12555   */\n    tag_216:\n        /* \"#utility.yul\":12331:12334   */\n      0x00\n        /* \"#utility.yul\":12352:12419   */\n      tag_336\n        /* \"#utility.yul\":12416:12418   */\n      0x25\n        /* \"#utility.yul\":12411:12414   */\n      dup4\n        /* \"#utility.yul\":12352:12419   */\n      tag_183\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":12345:12419   */\n      swap2\n      pop\n        /* \"#utility.yul\":12428:12521   */\n      tag_337\n        /* \"#utility.yul\":12517:12520   */\n      dup3\n        /* \"#utility.yul\":12428:12521   */\n      tag_215\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":12546:12548   */\n      0x40\n        /* \"#utility.yul\":12541:12544   */\n      dup3\n        /* \"#utility.yul\":12537:12549   */\n      add\n        /* \"#utility.yul\":12530:12549   */\n      swap1\n      pop\n        /* \"#utility.yul\":12189:12555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12561:12980   */\n    tag_164:\n        /* \"#utility.yul\":12727:12731   */\n      0x00\n        /* \"#utility.yul\":12765:12767   */\n      0x20\n        /* \"#utility.yul\":12754:12763   */\n      dup3\n        /* \"#utility.yul\":12750:12768   */\n      add\n        /* \"#utility.yul\":12742:12768   */\n      swap1\n      pop\n        /* \"#utility.yul\":12814:12823   */\n      dup2\n        /* \"#utility.yul\":12808:12812   */\n      dup2\n        /* \"#utility.yul\":12804:12824   */\n      sub\n        /* \"#utility.yul\":12800:12801   */\n      0x00\n        /* \"#utility.yul\":12789:12798   */\n      dup4\n        /* \"#utility.yul\":12785:12802   */\n      add\n        /* \"#utility.yul\":12778:12825   */\n      mstore\n        /* \"#utility.yul\":12842:12973   */\n      tag_339\n        /* \"#utility.yul\":12968:12972   */\n      dup2\n        /* \"#utility.yul\":12842:12973   */\n      tag_216\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":12834:12973   */\n      swap1\n      pop\n        /* \"#utility.yul\":12561:12980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12986:13208   */\n    tag_217:\n        /* \"#utility.yul\":13126:13160   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":13122:13123   */\n      0x00\n        /* \"#utility.yul\":13114:13120   */\n      dup3\n        /* \"#utility.yul\":13110:13124   */\n      add\n        /* \"#utility.yul\":13103:13161   */\n      mstore\n        /* \"#utility.yul\":13195:13200   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13190:13192   */\n      0x20\n        /* \"#utility.yul\":13182:13188   */\n      dup3\n        /* \"#utility.yul\":13178:13193   */\n      add\n        /* \"#utility.yul\":13171:13201   */\n      mstore\n        /* \"#utility.yul\":12986:13208   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13214:13580   */\n    tag_218:\n        /* \"#utility.yul\":13356:13359   */\n      0x00\n        /* \"#utility.yul\":13377:13444   */\n      tag_342\n        /* \"#utility.yul\":13441:13443   */\n      0x23\n        /* \"#utility.yul\":13436:13439   */\n      dup4\n        /* \"#utility.yul\":13377:13444   */\n      tag_183\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":13370:13444   */\n      swap2\n      pop\n        /* \"#utility.yul\":13453:13546   */\n      tag_343\n        /* \"#utility.yul\":13542:13545   */\n      dup3\n        /* \"#utility.yul\":13453:13546   */\n      tag_217\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":13571:13573   */\n      0x40\n        /* \"#utility.yul\":13566:13569   */\n      dup3\n        /* \"#utility.yul\":13562:13574   */\n      add\n        /* \"#utility.yul\":13555:13574   */\n      swap1\n      pop\n        /* \"#utility.yul\":13214:13580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13586:14005   */\n    tag_167:\n        /* \"#utility.yul\":13752:13756   */\n      0x00\n        /* \"#utility.yul\":13790:13792   */\n      0x20\n        /* \"#utility.yul\":13779:13788   */\n      dup3\n        /* \"#utility.yul\":13775:13793   */\n      add\n        /* \"#utility.yul\":13767:13793   */\n      swap1\n      pop\n        /* \"#utility.yul\":13839:13848   */\n      dup2\n        /* \"#utility.yul\":13833:13837   */\n      dup2\n        /* \"#utility.yul\":13829:13849   */\n      sub\n        /* \"#utility.yul\":13825:13826   */\n      0x00\n        /* \"#utility.yul\":13814:13823   */\n      dup4\n        /* \"#utility.yul\":13810:13827   */\n      add\n        /* \"#utility.yul\":13803:13850   */\n      mstore\n        /* \"#utility.yul\":13867:13998   */\n      tag_345\n        /* \"#utility.yul\":13993:13997   */\n      dup2\n        /* \"#utility.yul\":13867:13998   */\n      tag_218\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":13859:13998   */\n      swap1\n      pop\n        /* \"#utility.yul\":13586:14005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14011:14236   */\n    tag_219:\n        /* \"#utility.yul\":14151:14185   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":14147:14148   */\n      0x00\n        /* \"#utility.yul\":14139:14145   */\n      dup3\n        /* \"#utility.yul\":14135:14149   */\n      add\n        /* \"#utility.yul\":14128:14186   */\n      mstore\n        /* \"#utility.yul\":14220:14228   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14215:14217   */\n      0x20\n        /* \"#utility.yul\":14207:14213   */\n      dup3\n        /* \"#utility.yul\":14203:14218   */\n      add\n        /* \"#utility.yul\":14196:14229   */\n      mstore\n        /* \"#utility.yul\":14011:14236   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14242:14608   */\n    tag_220:\n        /* \"#utility.yul\":14384:14387   */\n      0x00\n        /* \"#utility.yul\":14405:14472   */\n      tag_348\n        /* \"#utility.yul\":14469:14471   */\n      0x26\n        /* \"#utility.yul\":14464:14467   */\n      dup4\n        /* \"#utility.yul\":14405:14472   */\n      tag_183\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":14398:14472   */\n      swap2\n      pop\n        /* \"#utility.yul\":14481:14574   */\n      tag_349\n        /* \"#utility.yul\":14570:14573   */\n      dup3\n        /* \"#utility.yul\":14481:14574   */\n      tag_219\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":14599:14601   */\n      0x40\n        /* \"#utility.yul\":14594:14597   */\n      dup3\n        /* \"#utility.yul\":14590:14602   */\n      add\n        /* \"#utility.yul\":14583:14602   */\n      swap1\n      pop\n        /* \"#utility.yul\":14242:14608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14614:15033   */\n    tag_172:\n        /* \"#utility.yul\":14780:14784   */\n      0x00\n        /* \"#utility.yul\":14818:14820   */\n      0x20\n        /* \"#utility.yul\":14807:14816   */\n      dup3\n        /* \"#utility.yul\":14803:14821   */\n      add\n        /* \"#utility.yul\":14795:14821   */\n      swap1\n      pop\n        /* \"#utility.yul\":14867:14876   */\n      dup2\n        /* \"#utility.yul\":14861:14865   */\n      dup2\n        /* \"#utility.yul\":14857:14877   */\n      sub\n        /* \"#utility.yul\":14853:14854   */\n      0x00\n        /* \"#utility.yul\":14842:14851   */\n      dup4\n        /* \"#utility.yul\":14838:14855   */\n      add\n        /* \"#utility.yul\":14831:14878   */\n      mstore\n        /* \"#utility.yul\":14895:15026   */\n      tag_351\n        /* \"#utility.yul\":15021:15025   */\n      dup2\n        /* \"#utility.yul\":14895:15026   */\n      tag_220\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":14887:15026   */\n      swap1\n      pop\n        /* \"#utility.yul\":14614:15033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15039:15264   */\n    tag_221:\n        /* \"#utility.yul\":15179:15213   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":15175:15176   */\n      0x00\n        /* \"#utility.yul\":15167:15173   */\n      dup3\n        /* \"#utility.yul\":15163:15177   */\n      add\n        /* \"#utility.yul\":15156:15214   */\n      mstore\n        /* \"#utility.yul\":15248:15256   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15243:15245   */\n      0x20\n        /* \"#utility.yul\":15235:15241   */\n      dup3\n        /* \"#utility.yul\":15231:15246   */\n      add\n        /* \"#utility.yul\":15224:15257   */\n      mstore\n        /* \"#utility.yul\":15039:15264   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15270:15636   */\n    tag_222:\n        /* \"#utility.yul\":15412:15415   */\n      0x00\n        /* \"#utility.yul\":15433:15500   */\n      tag_354\n        /* \"#utility.yul\":15497:15499   */\n      0x26\n        /* \"#utility.yul\":15492:15495   */\n      dup4\n        /* \"#utility.yul\":15433:15500   */\n      tag_183\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":15426:15500   */\n      swap2\n      pop\n        /* \"#utility.yul\":15509:15602   */\n      tag_355\n        /* \"#utility.yul\":15598:15601   */\n      dup3\n        /* \"#utility.yul\":15509:15602   */\n      tag_221\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":15627:15629   */\n      0x40\n        /* \"#utility.yul\":15622:15625   */\n      dup3\n        /* \"#utility.yul\":15618:15630   */\n      add\n        /* \"#utility.yul\":15611:15630   */\n      swap1\n      pop\n        /* \"#utility.yul\":15270:15636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15642:16061   */\n    tag_179:\n        /* \"#utility.yul\":15808:15812   */\n      0x00\n        /* \"#utility.yul\":15846:15848   */\n      0x20\n        /* \"#utility.yul\":15835:15844   */\n      dup3\n        /* \"#utility.yul\":15831:15849   */\n      add\n        /* \"#utility.yul\":15823:15849   */\n      swap1\n      pop\n        /* \"#utility.yul\":15895:15904   */\n      dup2\n        /* \"#utility.yul\":15889:15893   */\n      dup2\n        /* \"#utility.yul\":15885:15905   */\n      sub\n        /* \"#utility.yul\":15881:15882   */\n      0x00\n        /* \"#utility.yul\":15870:15879   */\n      dup4\n        /* \"#utility.yul\":15866:15883   */\n      add\n        /* \"#utility.yul\":15859:15906   */\n      mstore\n        /* \"#utility.yul\":15923:16054   */\n      tag_357\n        /* \"#utility.yul\":16049:16053   */\n      dup2\n        /* \"#utility.yul\":15923:16054   */\n      tag_222\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":15915:16054   */\n      swap1\n      pop\n        /* \"#utility.yul\":15642:16061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206f936b4574c9855dbec0d9c7acf7596b6449e93eae6abb4fd924095cfb1b7fa964736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_352": {
									"entryPoint": null,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_506": {
									"entryPoint": null,
									"id": 506,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_113": {
									"entryPoint": 564,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5583:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:1"
															},
															"nodeType": "YulIf",
															"src": "623:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:1"
															},
															"nodeType": "YulIf",
															"src": "714:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:1",
														"type": ""
													}
												],
												"src": "484:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "810:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:1",
														"type": ""
													}
												],
												"src": "957:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:1",
														"type": ""
													}
												],
												"src": "1056:107:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:1"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:1",
														"type": ""
													}
												],
												"src": "1169:393:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:1",
														"type": ""
													}
												],
												"src": "1568:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1651:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													}
												],
												"src": "1717:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:1",
														"type": ""
													}
												],
												"src": "1865:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"src": "1946:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"src": "2221:73:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													}
												],
												"src": "2300:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:1",
																"statements": []
															},
															"src": "2555:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"src": "2495:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:1",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:1"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:1"
															},
															"nodeType": "YulIf",
															"src": "2777:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:1",
														"type": ""
													}
												],
												"src": "2687:543:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"src": "3236:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:1"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3359:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:1"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:1",
														"type": ""
													}
												],
												"src": "3533:295:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:1"
															},
															"nodeType": "YulIf",
															"src": "4038:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:1",
																					"statements": []
																				},
																				"src": "4524:208:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:1"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:1",
														"type": ""
													}
												],
												"src": "3833:1395:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5299:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5316:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5339:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5321:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5321:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5309:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5309:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5287:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5294:3:1",
														"type": ""
													}
												],
												"src": "5234:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5456:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5466:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5478:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5489:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5474:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5466:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5546:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5559:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5570:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5555:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5502:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5502:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5428:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5440:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5451:4:1",
														"type": ""
													}
												],
												"src": "5358:222:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200023460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600e81526020017f4a7573747465737420546f6b656e00000000000000000000000000000000000081525060059081620001089190620004b6565b506040518060400160405280600381526020017f4a54540000000000000000000000000000000000000000000000000000000000815250600690816200014f9190620004b6565b506012600460006101000a81548160ff021916908360ff1602179055506a01dc74be914d16aa400000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600354604051620002269190620005ae565b60405180910390a3620005cb565b600033905090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002be57607f821691505b602082108103620002d457620002d362000276565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200033e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002ff565b6200034a8683620002ff565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000397620003916200038b8462000362565b6200036c565b62000362565b9050919050565b6000819050919050565b620003b38362000376565b620003cb620003c2826200039e565b8484546200030c565b825550505050565b600090565b620003e2620003d3565b620003ef818484620003a8565b505050565b5b8181101562000417576200040b600082620003d8565b600181019050620003f5565b5050565b601f82111562000466576200043081620002da565b6200043b84620002ef565b810160208510156200044b578190505b620004636200045a85620002ef565b830182620003f4565b50505b505050565b600082821c905092915050565b60006200048b600019846008026200046b565b1980831691505092915050565b6000620004a6838362000478565b9150826002028217905092915050565b620004c1826200023c565b67ffffffffffffffff811115620004dd57620004dc62000247565b5b620004e98254620002a5565b620004f68282856200041b565b600060209050601f8311600181146200052e576000841562000519578287015190505b62000525858262000498565b86555062000595565b601f1984166200053e86620002da565b60005b82811015620005685784890151825560018201915060208501945060208101905062000541565b8683101562000588578489015162000584601f89168262000478565b8355505b6001600288020188555050505b505050505050565b620005a88162000362565b82525050565b6000602082019050620005c560008301846200059d565b92915050565b6117ab80620005db6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d7146102a1578063a9059cbb146102d1578063dd62ed3e14610301578063f2fde38b1461033157610100565b8063715018a61461023d578063893d20e8146102475780638da5cb5b1461026557806395d89b411461028357610100565b8063313ce567116100d3578063313ce567146101a157806332424aa3146101bf57806339509351146101dd57806370a082311461020d57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61034d565b60405161011a9190610f60565b60405180910390f35b61013d6004803603810190610138919061101b565b6103df565b60405161014a9190611076565b60405180910390f35b61015b610402565b60405161016891906110a0565b60405180910390f35b61018b600480360381019061018691906110bb565b61040c565b6040516101989190611076565b60405180910390f35b6101a961043b565b6040516101b6919061112a565b60405180910390f35b6101c7610452565b6040516101d4919061112a565b60405180910390f35b6101f760048036038101906101f2919061101b565b610465565b6040516102049190611076565b60405180910390f35b61022760048036038101906102229190611145565b61049c565b60405161023491906110a0565b60405180910390f35b6102456104e5565b005b61024f610638565b60405161025c9190611181565b60405180910390f35b61026d610647565b60405161027a9190611181565b60405180910390f35b61028b610670565b6040516102989190610f60565b60405180910390f35b6102bb60048036038101906102b6919061101b565b610702565b6040516102c89190611076565b60405180910390f35b6102eb60048036038101906102e6919061101b565b610779565b6040516102f89190611076565b60405180910390f35b61031b6004803603810190610316919061119c565b61079c565b60405161032891906110a0565b60405180910390f35b61034b60048036038101906103469190611145565b610823565b005b60606005805461035c9061120b565b80601f01602080910402602001604051908101604052809291908181526020018280546103889061120b565b80156103d55780601f106103aa576101008083540402835291602001916103d5565b820191906000526020600020905b8154815290600101906020018083116103b857829003601f168201915b5050505050905090565b6000806103ea6108c4565b90506103f78185856108cc565b600191505092915050565b6000600354905090565b6000806104176108c4565b9050610424858285610a95565b61042f858585610b21565b60019150509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b6000806104706108c4565b9050610491818585610482858961079c565b61048c919061126b565b6108cc565b600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104ed6108c4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461057a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610571906112eb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610642610647565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606006805461067f9061120b565b80601f01602080910402602001604051908101604052809291908181526020018280546106ab9061120b565b80156106f85780601f106106cd576101008083540402835291602001916106f8565b820191906000526020600020905b8154815290600101906020018083116106db57829003601f168201915b5050505050905090565b60008061070d6108c4565b9050600061071b828661079c565b905083811015610760576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107579061137d565b60405180910390fd5b61076d82868684036108cc565b60019250505092915050565b6000806107846108c4565b9050610791818585610b21565b600191505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61082b6108c4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af906112eb565b60405180910390fd5b6108c181610d9a565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361093b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109329061140f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a1906114a1565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a8891906110a0565b60405180910390a3505050565b6000610aa1848461079c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b1b5781811015610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b049061150d565b60405180910390fd5b610b1a84848484036108cc565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b879061159f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611631565b60405180910390fd5b610c0a838383610ec6565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c88906116c3565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d8191906110a0565b60405180910390a3610d94848484610ecb565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0090611755565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f0a578082015181840152602081019050610eef565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f3282610ed0565b610f3c8185610edb565b9350610f4c818560208601610eec565b610f5581610f16565b840191505092915050565b60006020820190508181036000830152610f7a8184610f27565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fb282610f87565b9050919050565b610fc281610fa7565b8114610fcd57600080fd5b50565b600081359050610fdf81610fb9565b92915050565b6000819050919050565b610ff881610fe5565b811461100357600080fd5b50565b60008135905061101581610fef565b92915050565b6000806040838503121561103257611031610f82565b5b600061104085828601610fd0565b925050602061105185828601611006565b9150509250929050565b60008115159050919050565b6110708161105b565b82525050565b600060208201905061108b6000830184611067565b92915050565b61109a81610fe5565b82525050565b60006020820190506110b56000830184611091565b92915050565b6000806000606084860312156110d4576110d3610f82565b5b60006110e286828701610fd0565b93505060206110f386828701610fd0565b925050604061110486828701611006565b9150509250925092565b600060ff82169050919050565b6111248161110e565b82525050565b600060208201905061113f600083018461111b565b92915050565b60006020828403121561115b5761115a610f82565b5b600061116984828501610fd0565b91505092915050565b61117b81610fa7565b82525050565b60006020820190506111966000830184611172565b92915050565b600080604083850312156111b3576111b2610f82565b5b60006111c185828601610fd0565b92505060206111d285828601610fd0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061122357607f821691505b602082108103611236576112356111dc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061127682610fe5565b915061128183610fe5565b92508282019050808211156112995761129861123c565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112d5602083610edb565b91506112e08261129f565b602082019050919050565b60006020820190508181036000830152611304816112c8565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611367602583610edb565b91506113728261130b565b604082019050919050565b600060208201905081810360008301526113968161135a565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006113f9602483610edb565b91506114048261139d565b604082019050919050565b60006020820190508181036000830152611428816113ec565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061148b602283610edb565b91506114968261142f565b604082019050919050565b600060208201905081810360008301526114ba8161147e565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006114f7601d83610edb565b9150611502826114c1565b602082019050919050565b60006020820190508181036000830152611526816114ea565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611589602583610edb565b91506115948261152d565b604082019050919050565b600060208201905081810360008301526115b88161157c565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061161b602383610edb565b9150611626826115bf565b604082019050919050565b6000602082019050818103600083015261164a8161160e565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116ad602683610edb565b91506116b882611651565b604082019050919050565b600060208201905081810360008301526116dc816116a0565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061173f602683610edb565b915061174a826116e3565b604082019050919050565b6000602082019050818103600083015261176e81611732565b905091905056fea26469706673582212206f936b4574c9855dbec0d9c7acf7596b6449e93eae6abb4fd924095cfb1b7fa964736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x234 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4A7573747465737420546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP2 PUSH3 0x108 SWAP2 SWAP1 PUSH3 0x4B6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4A54540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP2 PUSH3 0x14F SWAP2 SWAP1 PUSH3 0x4B6 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH11 0x1DC74BE914D16AA400000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH3 0x226 SWAP2 SWAP1 PUSH3 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x5CB JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2BE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2D4 JUMPI PUSH3 0x2D3 PUSH3 0x276 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x33E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2FF JUMP JUMPDEST PUSH3 0x34A DUP7 DUP4 PUSH3 0x2FF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x397 PUSH3 0x391 PUSH3 0x38B DUP5 PUSH3 0x362 JUMP JUMPDEST PUSH3 0x36C JUMP JUMPDEST PUSH3 0x362 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3B3 DUP4 PUSH3 0x376 JUMP JUMPDEST PUSH3 0x3CB PUSH3 0x3C2 DUP3 PUSH3 0x39E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x30C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3E2 PUSH3 0x3D3 JUMP JUMPDEST PUSH3 0x3EF DUP2 DUP5 DUP5 PUSH3 0x3A8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x417 JUMPI PUSH3 0x40B PUSH1 0x0 DUP3 PUSH3 0x3D8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3F5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x466 JUMPI PUSH3 0x430 DUP2 PUSH3 0x2DA JUMP JUMPDEST PUSH3 0x43B DUP5 PUSH3 0x2EF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x44B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x463 PUSH3 0x45A DUP6 PUSH3 0x2EF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3F4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x48B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x46B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A6 DUP4 DUP4 PUSH3 0x478 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4C1 DUP3 PUSH3 0x23C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4DD JUMPI PUSH3 0x4DC PUSH3 0x247 JUMP JUMPDEST JUMPDEST PUSH3 0x4E9 DUP3 SLOAD PUSH3 0x2A5 JUMP JUMPDEST PUSH3 0x4F6 DUP3 DUP3 DUP6 PUSH3 0x41B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x52E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x519 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x525 DUP6 DUP3 PUSH3 0x498 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x595 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x53E DUP7 PUSH3 0x2DA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x568 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x541 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x588 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x584 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x478 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x5A8 DUP2 PUSH3 0x362 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5C5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x59D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17AB DUP1 PUSH3 0x5DB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x331 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x823 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x35C SWAP1 PUSH2 0x120B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x388 SWAP1 PUSH2 0x120B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3EA PUSH2 0x8C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F7 DUP2 DUP6 DUP6 PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x417 PUSH2 0x8C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x424 DUP6 DUP3 DUP6 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x42F DUP6 DUP6 DUP6 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x470 PUSH2 0x8C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x491 DUP2 DUP6 DUP6 PUSH2 0x482 DUP6 DUP10 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x8C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x57A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x571 SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x642 PUSH2 0x647 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x67F SWAP1 PUSH2 0x120B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6AB SWAP1 PUSH2 0x120B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x70D PUSH2 0x8C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x71B DUP3 DUP7 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x760 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x757 SWAP1 PUSH2 0x137D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x784 PUSH2 0x8C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x791 DUP2 DUP6 DUP6 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x82B PUSH2 0x8C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AF SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C1 DUP2 PUSH2 0xD9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x932 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A1 SWAP1 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA88 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA1 DUP5 DUP5 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB1B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB04 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x8CC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB87 SWAP1 PUSH2 0x159F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP1 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC0A DUP4 DUP4 DUP4 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC88 SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD81 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD94 DUP5 DUP5 DUP5 PUSH2 0xECB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE00 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF32 DUP3 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0xF3C DUP2 DUP6 PUSH2 0xEDB JUMP JUMPDEST SWAP4 POP PUSH2 0xF4C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEEC JUMP JUMPDEST PUSH2 0xF55 DUP2 PUSH2 0xF16 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF7A DUP2 DUP5 PUSH2 0xF27 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB2 DUP3 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC2 DUP2 PUSH2 0xFA7 JUMP JUMPDEST DUP2 EQ PUSH2 0xFCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDF DUP2 PUSH2 0xFB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFF8 DUP2 PUSH2 0xFE5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1015 DUP2 PUSH2 0xFEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1032 JUMPI PUSH2 0x1031 PUSH2 0xF82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1040 DUP6 DUP3 DUP7 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1051 DUP6 DUP3 DUP7 ADD PUSH2 0x1006 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1070 DUP2 PUSH2 0x105B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x108B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1067 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x109A DUP2 PUSH2 0xFE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1091 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10D4 JUMPI PUSH2 0x10D3 PUSH2 0xF82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10E2 DUP7 DUP3 DUP8 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10F3 DUP7 DUP3 DUP8 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1104 DUP7 DUP3 DUP8 ADD PUSH2 0x1006 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1124 DUP2 PUSH2 0x110E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x113F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x111B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115B JUMPI PUSH2 0x115A PUSH2 0xF82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1169 DUP5 DUP3 DUP6 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x117B DUP2 PUSH2 0xFA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1196 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1172 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11B3 JUMPI PUSH2 0x11B2 PUSH2 0xF82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11C1 DUP6 DUP3 DUP7 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11D2 DUP6 DUP3 DUP7 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1223 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1236 JUMPI PUSH2 0x1235 PUSH2 0x11DC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1276 DUP3 PUSH2 0xFE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1281 DUP4 PUSH2 0xFE5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1298 PUSH2 0x123C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D5 PUSH1 0x20 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x12E0 DUP3 PUSH2 0x129F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1304 DUP2 PUSH2 0x12C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1367 PUSH1 0x25 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1372 DUP3 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1396 DUP2 PUSH2 0x135A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F9 PUSH1 0x24 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1404 DUP3 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1428 DUP2 PUSH2 0x13EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148B PUSH1 0x22 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1496 DUP3 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14BA DUP2 PUSH2 0x147E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F7 PUSH1 0x1D DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1502 DUP3 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1526 DUP2 PUSH2 0x14EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1589 PUSH1 0x25 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1594 DUP3 PUSH2 0x152D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15B8 DUP2 PUSH2 0x157C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161B PUSH1 0x23 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1626 DUP3 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x164A DUP2 PUSH2 0x160E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16AD PUSH1 0x26 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x16B8 DUP3 PUSH2 0x1651 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16DC DUP2 PUSH2 0x16A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173F PUSH1 0x26 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x174A DUP3 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x176E DUP2 PUSH2 0x1732 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x936B4574C9855DBEC0D9C7ACF7596B64 0x49 0xE9 RETURNDATACOPY 0xAE PUSH11 0xBB4FD924095CFB1B7FA964 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "11117:11620:0:-:0;;;11618:260;;;;;;;;;;9581:17;9601:12;:10;;;:12;;:::i;:::-;9581:32;;9628:9;9619:6;;:18;;;;;;;;;;;;;;;;;;9681:9;9648:43;;9677:1;9648:43;;;;;;;;;;;;9575:121;11649:24;;;;;;;;;;;;;;;;;:5;:24;;;;;;:::i;:::-;;11683:15;;;;;;;;;;;;;;;;;:7;:15;;;;;;:::i;:::-;;11720:2;11708:9;;:14;;;;;;;;;;;;;;;;;;11747:16;11732:12;:31;;;;11797:12;;11773:9;:21;11783:10;11773:21;;;;;;;;;;;;;;;:36;;;;11846:10;11825:46;;11842:1;11825:46;;;11858:12;;11825:46;;;;;;:::i;:::-;;;;;;;;11117:11620;;3665:82;3710:7;3732:10;3725:17;;3665:82;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:118::-;5321:24;5339:5;5321:24;:::i;:::-;5316:3;5309:37;5234:118;;:::o;5358:222::-;5451:4;5489:2;5478:9;5474:18;5466:26;;5502:71;5570:1;5559:9;5555:17;5546:6;5502:71;:::i;:::-;5358:222;;;;:::o;11117:11620:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1057": {
									"entryPoint": 3787,
									"id": 1057,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_992": {
									"entryPoint": 2252,
									"id": 992,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1046": {
									"entryPoint": 3782,
									"id": 1046,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_decimals_460": {
									"entryPoint": 1106,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_113": {
									"entryPoint": 2244,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1035": {
									"entryPoint": 2709,
									"id": 1035,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_435": {
									"entryPoint": 3482,
									"id": 435,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_818": {
									"entryPoint": 2849,
									"id": 818,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_613": {
									"entryPoint": 1948,
									"id": 613,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_638": {
									"entryPoint": 991,
									"id": 638,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_570": {
									"entryPoint": 1180,
									"id": 570,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_546": {
									"entryPoint": 1083,
									"id": 546,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_741": {
									"entryPoint": 1794,
									"id": 741,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_516": {
									"entryPoint": 1592,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_700": {
									"entryPoint": 1125,
									"id": 700,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_526": {
									"entryPoint": 845,
									"id": 526,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_361": {
									"entryPoint": 1607,
									"id": 361,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_396": {
									"entryPoint": 1253,
									"id": 396,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_536": {
									"entryPoint": 1648,
									"id": 536,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_556": {
									"entryPoint": 1026,
									"id": 556,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_671": {
									"entryPoint": 1036,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_409": {
									"entryPoint": 2083,
									"id": 409,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_595": {
									"entryPoint": 1913,
									"id": 595,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3820,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4668,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3970,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 5167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 5313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 5421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 5021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 4875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16064:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:1",
														"type": ""
													}
												],
												"src": "1349:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:1",
														"type": ""
													}
												],
												"src": "1676:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:1",
														"type": ""
													}
												],
												"src": "1808:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:1"
															},
															"nodeType": "YulIf",
															"src": "1963:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:1",
														"type": ""
													}
												],
												"src": "1910:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:1",
														"type": ""
													}
												],
												"src": "2038:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:1",
														"type": ""
													}
												],
												"src": "2183:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:1"
															},
															"nodeType": "YulIf",
															"src": "2319:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:1",
														"type": ""
													}
												],
												"src": "2266:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:1",
														"type": ""
													}
												],
												"src": "2394:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:1"
															},
															"nodeType": "YulIf",
															"src": "2632:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:1",
														"type": ""
													}
												],
												"src": "2539:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:1",
														"type": ""
													}
												],
												"src": "3019:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:1",
														"type": ""
													}
												],
												"src": "3115:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:1",
														"type": ""
													}
												],
												"src": "3230:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:1",
														"type": ""
													}
												],
												"src": "3446:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:1",
														"type": ""
													}
												],
												"src": "3570:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:1"
															},
															"nodeType": "YulIf",
															"src": "3908:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:1",
														"type": ""
													}
												],
												"src": "3798:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:1",
														"type": ""
													}
												],
												"src": "4423:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:1",
														"type": ""
													}
												],
												"src": "4515:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:1",
														"type": ""
													}
												],
												"src": "4633:214:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:1"
															},
															"nodeType": "YulIf",
															"src": "4929:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:1",
														"type": ""
													}
												],
												"src": "4853:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5253:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5293:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5275:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5275:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5263:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5248:3:1",
														"type": ""
													}
												],
												"src": "5188:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5410:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5420:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5432:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5443:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5428:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5420:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5500:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5456:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5456:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5382:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5394:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5405:4:1",
														"type": ""
													}
												],
												"src": "5312:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5623:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5669:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5671:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5671:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5671:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5644:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5640:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5665:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5636:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5636:32:1"
															},
															"nodeType": "YulIf",
															"src": "5633:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5762:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5777:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5791:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5781:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5806:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5841:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5852:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5837:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5837:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5861:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5816:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5816:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5806:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5889:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5904:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5918:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5908:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5934:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5969:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5980:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5965:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5965:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5989:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5944:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5944:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5934:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5585:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5596:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5608:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5616:6:1",
														"type": ""
													}
												],
												"src": "5540:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6048:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6065:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6068:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6058:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6162:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6165:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6155:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6186:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6189:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6179:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6020:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6257:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6267:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6281:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6287:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6277:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6298:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6328:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6334:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6302:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6375:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6389:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6403:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6411:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6399:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6399:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6389:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6355:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6348:26:1"
															},
															"nodeType": "YulIf",
															"src": "6345:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6478:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6492:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6492:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6442:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6465:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6473:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6462:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6462:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6439:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6439:38:1"
															},
															"nodeType": "YulIf",
															"src": "6436:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6241:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6250:6:1",
														"type": ""
													}
												],
												"src": "6206:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6560:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6577:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6580:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6570:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6570:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6570:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6674:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6677:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6667:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6698:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6701:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6691:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6691:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6532:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6762:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6772:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6795:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6777:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6777:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6772:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6806:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6829:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6811:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6811:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6806:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6851:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6854:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6847:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6840:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6880:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6882:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6882:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6882:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6872:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6875:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6869:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6869:10:1"
															},
															"nodeType": "YulIf",
															"src": "6866:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6749:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6752:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6758:3:1",
														"type": ""
													}
												],
												"src": "6718:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7021:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7043:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7051:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7039:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7055:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7032:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7013:6:1",
														"type": ""
													}
												],
												"src": "6915:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7249:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7259:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7325:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7266:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7266:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7259:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7431:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "7342:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7444:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7455:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7460:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7451:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7451:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7444:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7237:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7245:3:1",
														"type": ""
													}
												],
												"src": "7103:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7646:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7656:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7668:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7679:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7664:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7664:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7656:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7703:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7714:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7699:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7699:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7722:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7728:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7718:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7718:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7692:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7692:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7692:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7748:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7882:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7756:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7756:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7748:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7626:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7641:4:1",
														"type": ""
													}
												],
												"src": "7475:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8006:118:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8028:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8036:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8024:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8024:14:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8040:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8017:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8017:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8017:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8096:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8104:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8092:15:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8109:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8085:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8085:32:1"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7998:6:1",
														"type": ""
													}
												],
												"src": "7900:224:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8276:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8286:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8352:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8357:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8293:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8293:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8286:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8458:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "8369:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8369:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8369:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8471:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8482:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8487:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8478:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8478:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8471:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8264:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8272:3:1",
														"type": ""
													}
												],
												"src": "8130:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8673:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8683:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8695:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8706:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8691:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8691:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8683:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8730:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8741:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8726:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8726:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8749:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8755:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8745:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8745:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8719:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8719:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8775:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8909:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8783:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8783:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8775:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8653:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8668:4:1",
														"type": ""
													}
												],
												"src": "8502:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9033:117:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9055:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9063:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9051:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9051:14:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9067:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9044:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9044:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9044:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9123:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9131:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9119:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9119:15:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9136:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9112:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9112:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9112:31:1"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9025:6:1",
														"type": ""
													}
												],
												"src": "8927:223:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9302:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9312:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9378:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9383:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9319:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9319:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9312:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9484:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "9395:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9395:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9395:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9497:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9508:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9513:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9504:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9504:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9497:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9290:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9298:3:1",
														"type": ""
													}
												],
												"src": "9156:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9699:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9709:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9721:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9732:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9717:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9717:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9709:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9756:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9767:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9752:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9752:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9775:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9781:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9771:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9771:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9745:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9745:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9801:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9935:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9809:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9809:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9801:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9679:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9694:4:1",
														"type": ""
													}
												],
												"src": "9528:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10059:115:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10081:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10089:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10077:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10077:14:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10093:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10070:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10070:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10070:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10149:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10157:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10145:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10145:15:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10162:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10138:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10138:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10138:29:1"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10051:6:1",
														"type": ""
													}
												],
												"src": "9953:221:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10326:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10336:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10402:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10407:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10343:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10343:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10336:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10508:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "10419:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10419:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10419:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10521:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10532:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10537:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10528:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10528:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10521:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10314:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10322:3:1",
														"type": ""
													}
												],
												"src": "10180:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10723:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10733:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10745:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10756:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10741:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10741:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10733:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10780:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10791:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10776:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10776:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10799:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10805:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10795:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10795:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10769:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10769:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10769:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10825:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10959:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10833:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10833:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10825:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10703:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10718:4:1",
														"type": ""
													}
												],
												"src": "10552:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11083:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11105:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11113:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11101:14:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11117:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11094:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11094:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11094:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11075:6:1",
														"type": ""
													}
												],
												"src": "10977:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11308:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11318:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11384:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11389:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11325:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11325:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11318:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11490:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "11401:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11401:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11401:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11503:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11514:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11519:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11510:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11510:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11503:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11296:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11304:3:1",
														"type": ""
													}
												],
												"src": "11162:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11705:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11715:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11727:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11738:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11723:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11723:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11715:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11762:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11773:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11758:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11781:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11787:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11777:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11777:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11751:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11751:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11807:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11941:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11815:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11815:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11807:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11685:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11700:4:1",
														"type": ""
													}
												],
												"src": "11534:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12065:118:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12087:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12095:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12083:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12083:14:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12099:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12076:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12076:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12076:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12155:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12163:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12151:15:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12168:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12144:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12144:32:1"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12057:6:1",
														"type": ""
													}
												],
												"src": "11959:224:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12335:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12345:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12411:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12416:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12352:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12352:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12345:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12517:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "12428:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12428:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12428:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12530:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12541:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12546:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12537:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12537:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12530:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12323:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12331:3:1",
														"type": ""
													}
												],
												"src": "12189:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12732:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12742:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12754:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12765:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12750:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12750:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12742:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12789:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12800:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12785:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12785:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12808:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12814:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12804:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12804:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12778:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12778:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12778:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12834:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12968:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12842:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12842:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12834:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12712:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12727:4:1",
														"type": ""
													}
												],
												"src": "12561:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13092:116:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13114:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13122:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13110:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13110:14:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13126:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13103:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13103:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13103:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13182:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13190:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13178:15:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13195:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13171:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13171:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13171:30:1"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13084:6:1",
														"type": ""
													}
												],
												"src": "12986:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13360:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13370:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13436:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13441:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13377:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13377:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13370:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13542:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "13453:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13453:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13453:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13555:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13566:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13571:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13562:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13562:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13555:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13348:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13356:3:1",
														"type": ""
													}
												],
												"src": "13214:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13757:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13767:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13779:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13790:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13775:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13775:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13767:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13814:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13825:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13810:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13810:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13833:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13839:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13829:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13829:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13803:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13803:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13803:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13859:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13993:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13867:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13867:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13859:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13737:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13752:4:1",
														"type": ""
													}
												],
												"src": "13586:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14117:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14139:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14147:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14135:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14135:14:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14151:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14128:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14128:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14207:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14215:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14203:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14203:15:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14220:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14196:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14196:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14196:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14109:6:1",
														"type": ""
													}
												],
												"src": "14011:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14388:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14398:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14464:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14469:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14405:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14405:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14398:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14570:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "14481:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14481:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14481:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14583:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14594:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14599:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14590:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14590:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14583:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14376:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14384:3:1",
														"type": ""
													}
												],
												"src": "14242:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14785:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14795:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14807:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14818:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14803:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14803:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14795:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14842:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14853:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14838:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14838:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14861:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14867:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14857:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14831:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14831:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14831:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14887:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15021:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14895:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14895:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14887:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14765:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14780:4:1",
														"type": ""
													}
												],
												"src": "14614:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15145:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15167:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15175:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15163:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15163:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15179:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15156:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15156:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15156:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15235:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15243:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15231:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15231:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15248:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15224:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15224:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15224:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15137:6:1",
														"type": ""
													}
												],
												"src": "15039:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15416:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15426:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15492:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15497:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15433:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15433:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15426:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15598:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "15509:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15509:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15509:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15611:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15622:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15627:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15618:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15618:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15611:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15404:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15412:3:1",
														"type": ""
													}
												],
												"src": "15270:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15813:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15823:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15835:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15846:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15831:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15831:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15823:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15870:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15881:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15866:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15866:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15889:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15895:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15885:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15885:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15859:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15859:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15859:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15915:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16049:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15923:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15923:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15915:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15793:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15808:4:1",
														"type": ""
													}
												],
												"src": "15642:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d7146102a1578063a9059cbb146102d1578063dd62ed3e14610301578063f2fde38b1461033157610100565b8063715018a61461023d578063893d20e8146102475780638da5cb5b1461026557806395d89b411461028357610100565b8063313ce567116100d3578063313ce567146101a157806332424aa3146101bf57806339509351146101dd57806370a082311461020d57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61034d565b60405161011a9190610f60565b60405180910390f35b61013d6004803603810190610138919061101b565b6103df565b60405161014a9190611076565b60405180910390f35b61015b610402565b60405161016891906110a0565b60405180910390f35b61018b600480360381019061018691906110bb565b61040c565b6040516101989190611076565b60405180910390f35b6101a961043b565b6040516101b6919061112a565b60405180910390f35b6101c7610452565b6040516101d4919061112a565b60405180910390f35b6101f760048036038101906101f2919061101b565b610465565b6040516102049190611076565b60405180910390f35b61022760048036038101906102229190611145565b61049c565b60405161023491906110a0565b60405180910390f35b6102456104e5565b005b61024f610638565b60405161025c9190611181565b60405180910390f35b61026d610647565b60405161027a9190611181565b60405180910390f35b61028b610670565b6040516102989190610f60565b60405180910390f35b6102bb60048036038101906102b6919061101b565b610702565b6040516102c89190611076565b60405180910390f35b6102eb60048036038101906102e6919061101b565b610779565b6040516102f89190611076565b60405180910390f35b61031b6004803603810190610316919061119c565b61079c565b60405161032891906110a0565b60405180910390f35b61034b60048036038101906103469190611145565b610823565b005b60606005805461035c9061120b565b80601f01602080910402602001604051908101604052809291908181526020018280546103889061120b565b80156103d55780601f106103aa576101008083540402835291602001916103d5565b820191906000526020600020905b8154815290600101906020018083116103b857829003601f168201915b5050505050905090565b6000806103ea6108c4565b90506103f78185856108cc565b600191505092915050565b6000600354905090565b6000806104176108c4565b9050610424858285610a95565b61042f858585610b21565b60019150509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b6000806104706108c4565b9050610491818585610482858961079c565b61048c919061126b565b6108cc565b600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104ed6108c4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461057a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610571906112eb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610642610647565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606006805461067f9061120b565b80601f01602080910402602001604051908101604052809291908181526020018280546106ab9061120b565b80156106f85780601f106106cd576101008083540402835291602001916106f8565b820191906000526020600020905b8154815290600101906020018083116106db57829003601f168201915b5050505050905090565b60008061070d6108c4565b9050600061071b828661079c565b905083811015610760576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107579061137d565b60405180910390fd5b61076d82868684036108cc565b60019250505092915050565b6000806107846108c4565b9050610791818585610b21565b600191505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61082b6108c4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af906112eb565b60405180910390fd5b6108c181610d9a565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361093b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109329061140f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a1906114a1565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a8891906110a0565b60405180910390a3505050565b6000610aa1848461079c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b1b5781811015610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b049061150d565b60405180910390fd5b610b1a84848484036108cc565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b879061159f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611631565b60405180910390fd5b610c0a838383610ec6565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c88906116c3565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d8191906110a0565b60405180910390a3610d94848484610ecb565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0090611755565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f0a578082015181840152602081019050610eef565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f3282610ed0565b610f3c8185610edb565b9350610f4c818560208601610eec565b610f5581610f16565b840191505092915050565b60006020820190508181036000830152610f7a8184610f27565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fb282610f87565b9050919050565b610fc281610fa7565b8114610fcd57600080fd5b50565b600081359050610fdf81610fb9565b92915050565b6000819050919050565b610ff881610fe5565b811461100357600080fd5b50565b60008135905061101581610fef565b92915050565b6000806040838503121561103257611031610f82565b5b600061104085828601610fd0565b925050602061105185828601611006565b9150509250929050565b60008115159050919050565b6110708161105b565b82525050565b600060208201905061108b6000830184611067565b92915050565b61109a81610fe5565b82525050565b60006020820190506110b56000830184611091565b92915050565b6000806000606084860312156110d4576110d3610f82565b5b60006110e286828701610fd0565b93505060206110f386828701610fd0565b925050604061110486828701611006565b9150509250925092565b600060ff82169050919050565b6111248161110e565b82525050565b600060208201905061113f600083018461111b565b92915050565b60006020828403121561115b5761115a610f82565b5b600061116984828501610fd0565b91505092915050565b61117b81610fa7565b82525050565b60006020820190506111966000830184611172565b92915050565b600080604083850312156111b3576111b2610f82565b5b60006111c185828601610fd0565b92505060206111d285828601610fd0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061122357607f821691505b602082108103611236576112356111dc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061127682610fe5565b915061128183610fe5565b92508282019050808211156112995761129861123c565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112d5602083610edb565b91506112e08261129f565b602082019050919050565b60006020820190508181036000830152611304816112c8565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611367602583610edb565b91506113728261130b565b604082019050919050565b600060208201905081810360008301526113968161135a565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006113f9602483610edb565b91506114048261139d565b604082019050919050565b60006020820190508181036000830152611428816113ec565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061148b602283610edb565b91506114968261142f565b604082019050919050565b600060208201905081810360008301526114ba8161147e565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006114f7601d83610edb565b9150611502826114c1565b602082019050919050565b60006020820190508181036000830152611526816114ea565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611589602583610edb565b91506115948261152d565b604082019050919050565b600060208201905081810360008301526115b88161157c565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061161b602383610edb565b9150611626826115bf565b604082019050919050565b6000602082019050818103600083015261164a8161160e565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116ad602683610edb565b91506116b882611651565b604082019050919050565b600060208201905081810360008301526116dc816116a0565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061173f602683610edb565b915061174a826116e3565b604082019050919050565b6000602082019050818103600083015261176e81611732565b905091905056fea26469706673582212206f936b4574c9855dbec0d9c7acf7596b6449e93eae6abb4fd924095cfb1b7fa964736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x331 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x823 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x35C SWAP1 PUSH2 0x120B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x388 SWAP1 PUSH2 0x120B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3EA PUSH2 0x8C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F7 DUP2 DUP6 DUP6 PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x417 PUSH2 0x8C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x424 DUP6 DUP3 DUP6 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x42F DUP6 DUP6 DUP6 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x470 PUSH2 0x8C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x491 DUP2 DUP6 DUP6 PUSH2 0x482 DUP6 DUP10 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x8C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x57A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x571 SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x642 PUSH2 0x647 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x67F SWAP1 PUSH2 0x120B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6AB SWAP1 PUSH2 0x120B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x70D PUSH2 0x8C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x71B DUP3 DUP7 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x760 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x757 SWAP1 PUSH2 0x137D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x784 PUSH2 0x8C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x791 DUP2 DUP6 DUP6 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x82B PUSH2 0x8C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AF SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C1 DUP2 PUSH2 0xD9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x932 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A1 SWAP1 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA88 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA1 DUP5 DUP5 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB1B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB04 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x8CC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB87 SWAP1 PUSH2 0x159F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP1 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC0A DUP4 DUP4 DUP4 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC88 SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD81 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD94 DUP5 DUP5 DUP5 PUSH2 0xECB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE00 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF32 DUP3 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0xF3C DUP2 DUP6 PUSH2 0xEDB JUMP JUMPDEST SWAP4 POP PUSH2 0xF4C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEEC JUMP JUMPDEST PUSH2 0xF55 DUP2 PUSH2 0xF16 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF7A DUP2 DUP5 PUSH2 0xF27 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB2 DUP3 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC2 DUP2 PUSH2 0xFA7 JUMP JUMPDEST DUP2 EQ PUSH2 0xFCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDF DUP2 PUSH2 0xFB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFF8 DUP2 PUSH2 0xFE5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1015 DUP2 PUSH2 0xFEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1032 JUMPI PUSH2 0x1031 PUSH2 0xF82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1040 DUP6 DUP3 DUP7 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1051 DUP6 DUP3 DUP7 ADD PUSH2 0x1006 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1070 DUP2 PUSH2 0x105B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x108B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1067 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x109A DUP2 PUSH2 0xFE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1091 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10D4 JUMPI PUSH2 0x10D3 PUSH2 0xF82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10E2 DUP7 DUP3 DUP8 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10F3 DUP7 DUP3 DUP8 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1104 DUP7 DUP3 DUP8 ADD PUSH2 0x1006 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1124 DUP2 PUSH2 0x110E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x113F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x111B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115B JUMPI PUSH2 0x115A PUSH2 0xF82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1169 DUP5 DUP3 DUP6 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x117B DUP2 PUSH2 0xFA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1196 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1172 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11B3 JUMPI PUSH2 0x11B2 PUSH2 0xF82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11C1 DUP6 DUP3 DUP7 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11D2 DUP6 DUP3 DUP7 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1223 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1236 JUMPI PUSH2 0x1235 PUSH2 0x11DC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1276 DUP3 PUSH2 0xFE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1281 DUP4 PUSH2 0xFE5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1298 PUSH2 0x123C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D5 PUSH1 0x20 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x12E0 DUP3 PUSH2 0x129F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1304 DUP2 PUSH2 0x12C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1367 PUSH1 0x25 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1372 DUP3 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1396 DUP2 PUSH2 0x135A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F9 PUSH1 0x24 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1404 DUP3 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1428 DUP2 PUSH2 0x13EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148B PUSH1 0x22 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1496 DUP3 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14BA DUP2 PUSH2 0x147E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F7 PUSH1 0x1D DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1502 DUP3 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1526 DUP2 PUSH2 0x14EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1589 PUSH1 0x25 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1594 DUP3 PUSH2 0x152D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15B8 DUP2 PUSH2 0x157C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161B PUSH1 0x23 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1626 DUP3 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x164A DUP2 PUSH2 0x160E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16AD PUSH1 0x26 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x16B8 DUP3 PUSH2 0x1651 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16DC DUP2 PUSH2 0x16A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173F PUSH1 0x26 DUP4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP PUSH2 0x174A DUP3 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x176E DUP2 PUSH2 0x1732 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x936B4574C9855DBEC0D9C7ACF7596B64 0x49 0xE9 RETURNDATACOPY 0xAE PUSH11 0xBB4FD924095CFB1B7FA964 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "11117:11620:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12042:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14335:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13146:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15094:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12988:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11359:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15745:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13310:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10347:127;;;:::i;:::-;;11884:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9764:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12253:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16466:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13631:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13878:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10613:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12042:98;12096:13;12128:5;12121:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12042:98;:::o;14335:197::-;14418:4;14434:13;14450:12;:10;:12::i;:::-;14434:28;;14472:32;14481:5;14488:7;14497:6;14472:8;:32::i;:::-;14521:4;14514:11;;;14335:197;;;;:::o;13146:106::-;13207:7;13233:12;;13226:19;;13146:106;:::o;15094:256::-;15191:4;15207:15;15225:12;:10;:12::i;:::-;15207:30;;15247:38;15263:4;15269:7;15278:6;15247:15;:38::i;:::-;15295:27;15305:4;15311:2;15315:6;15295:9;:27::i;:::-;15339:4;15332:11;;;15094:256;;;;;:::o;12988:98::-;13046:5;13070:9;;;;;;;;;;;13063:16;;12988:98;:::o;11359:22::-;;;;;;;;;;;;;:::o;15745:234::-;15833:4;15849:13;15865:12;:10;:12::i;:::-;15849:28;;15887:64;15896:5;15903:7;15940:10;15912:25;15922:5;15929:7;15912:9;:25::i;:::-;:38;;;;:::i;:::-;15887:8;:64::i;:::-;15968:4;15961:11;;;15745:234;;;;:::o;13310:125::-;13384:7;13410:9;:18;13420:7;13410:18;;;;;;;;;;;;;;;;13403:25;;13310:125;;;:::o;10347:127::-;9960:12;:10;:12::i;:::-;9950:22;;:6;;;;;;;;;;:22;;;9942:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;10441:1:::1;10404:40;;10425:6;::::0;::::1;;;;;;;;10404:40;;;;;;;;;;;;10467:1;10450:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;10347:127::o:0;11884:93::-;11937:7;11963;:5;:7::i;:::-;11956:14;;11884:93;:::o;9764:71::-;9802:7;9824:6;;;;;;;;;;;9817:13;;9764:71;:::o;12253:102::-;12309:13;12341:7;12334:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12253:102;:::o;16466:427::-;16559:4;16575:13;16591:12;:10;:12::i;:::-;16575:28;;16613:24;16640:25;16650:5;16657:7;16640:9;:25::i;:::-;16613:52;;16703:15;16683:16;:35;;16675:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;16794:60;16803:5;16810:7;16838:15;16819:16;:34;16794:8;:60::i;:::-;16882:4;16875:11;;;;16466:427;;;;:::o;13631:189::-;13710:4;13726:13;13742:12;:10;:12::i;:::-;13726:28;;13764;13774:5;13781:2;13785:6;13764:9;:28::i;:::-;13809:4;13802:11;;;13631:189;;;;:::o;13878:149::-;13967:7;13993:11;:18;14005:5;13993:18;;;;;;;;;;;;;;;:27;14012:7;13993:27;;;;;;;;;;;;;;;;13986:34;;13878:149;;;;:::o;10613:101::-;9960:12;:10;:12::i;:::-;9950:22;;:6;;;;;;;;;;:22;;;9942:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;10681:28:::1;10700:8;10681:18;:28::i;:::-;10613:101:::0;:::o;3665:82::-;3710:7;3732:10;3725:17;;3665:82;:::o;20348:340::-;20466:1;20449:19;;:5;:19;;;20441:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;20546:1;20527:21;;:7;:21;;;20519:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;20628:6;20598:11;:18;20610:5;20598:18;;;;;;;;;;;;;;;:27;20617:7;20598:27;;;;;;;;;;;;;;;:36;;;;20665:7;20649:32;;20658:5;20649:32;;;20674:6;20649:32;;;;;;:::i;:::-;;;;;;;;20348:340;;;:::o;20969:411::-;21069:24;21096:25;21106:5;21113:7;21096:9;:25::i;:::-;21069:52;;21155:17;21135:16;:37;21131:243;;21216:6;21196:16;:26;;21188:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;21298:51;21307:5;21314:7;21342:6;21323:16;:25;21298:8;:51::i;:::-;21131:243;21059:321;20969:411;;;:::o;17347:788::-;17459:1;17443:18;;:4;:18;;;17435:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;17535:1;17521:16;;:2;:16;;;17513:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;17588:38;17609:4;17615:2;17619:6;17588:20;:38::i;:::-;17637:19;17659:9;:15;17669:4;17659:15;;;;;;;;;;;;;;;;17637:37;;17707:6;17692:11;:21;;17684:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;17822:6;17808:11;:20;17790:9;:15;17800:4;17790:15;;;;;;;;;;;;;;;:38;;;;18022:6;18005:9;:13;18015:2;18005:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;18069:2;18054:26;;18063:4;18054:26;;;18073:6;18054:26;;;;;;:::i;:::-;;;;;;;;18091:37;18111:4;18117:2;18121:6;18091:19;:37::i;:::-;17425:710;17347:788;;;:::o;10807:211::-;10896:1;10876:22;;:8;:22;;;10868:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;10981:8;10952:38;;10973:6;;;;;;;;;;10952:38;;;;;;;;;;;;11005:8;10996:6;;:17;;;;;;;;;;;;;;;;;;10807:211;:::o;21964:91::-;;;;:::o;22643:90::-;;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:180::-;6068:77;6065:1;6058:88;6165:4;6162:1;6155:15;6189:4;6186:1;6179:15;6206:320;6250:6;6287:1;6281:4;6277:12;6267:22;;6334:1;6328:4;6324:12;6355:18;6345:81;;6411:4;6403:6;6399:17;6389:27;;6345:81;6473:2;6465:6;6462:14;6442:18;6439:38;6436:84;;6492:18;;:::i;:::-;6436:84;6257:269;6206:320;;;:::o;6532:180::-;6580:77;6577:1;6570:88;6677:4;6674:1;6667:15;6701:4;6698:1;6691:15;6718:191;6758:3;6777:20;6795:1;6777:20;:::i;:::-;6772:25;;6811:20;6829:1;6811:20;:::i;:::-;6806:25;;6854:1;6851;6847:9;6840:16;;6875:3;6872:1;6869:10;6866:36;;;6882:18;;:::i;:::-;6866:36;6718:191;;;;:::o;6915:182::-;7055:34;7051:1;7043:6;7039:14;7032:58;6915:182;:::o;7103:366::-;7245:3;7266:67;7330:2;7325:3;7266:67;:::i;:::-;7259:74;;7342:93;7431:3;7342:93;:::i;:::-;7460:2;7455:3;7451:12;7444:19;;7103:366;;;:::o;7475:419::-;7641:4;7679:2;7668:9;7664:18;7656:26;;7728:9;7722:4;7718:20;7714:1;7703:9;7699:17;7692:47;7756:131;7882:4;7756:131;:::i;:::-;7748:139;;7475:419;;;:::o;7900:224::-;8040:34;8036:1;8028:6;8024:14;8017:58;8109:7;8104:2;8096:6;8092:15;8085:32;7900:224;:::o;8130:366::-;8272:3;8293:67;8357:2;8352:3;8293:67;:::i;:::-;8286:74;;8369:93;8458:3;8369:93;:::i;:::-;8487:2;8482:3;8478:12;8471:19;;8130:366;;;:::o;8502:419::-;8668:4;8706:2;8695:9;8691:18;8683:26;;8755:9;8749:4;8745:20;8741:1;8730:9;8726:17;8719:47;8783:131;8909:4;8783:131;:::i;:::-;8775:139;;8502:419;;;:::o;8927:223::-;9067:34;9063:1;9055:6;9051:14;9044:58;9136:6;9131:2;9123:6;9119:15;9112:31;8927:223;:::o;9156:366::-;9298:3;9319:67;9383:2;9378:3;9319:67;:::i;:::-;9312:74;;9395:93;9484:3;9395:93;:::i;:::-;9513:2;9508:3;9504:12;9497:19;;9156:366;;;:::o;9528:419::-;9694:4;9732:2;9721:9;9717:18;9709:26;;9781:9;9775:4;9771:20;9767:1;9756:9;9752:17;9745:47;9809:131;9935:4;9809:131;:::i;:::-;9801:139;;9528:419;;;:::o;9953:221::-;10093:34;10089:1;10081:6;10077:14;10070:58;10162:4;10157:2;10149:6;10145:15;10138:29;9953:221;:::o;10180:366::-;10322:3;10343:67;10407:2;10402:3;10343:67;:::i;:::-;10336:74;;10419:93;10508:3;10419:93;:::i;:::-;10537:2;10532:3;10528:12;10521:19;;10180:366;;;:::o;10552:419::-;10718:4;10756:2;10745:9;10741:18;10733:26;;10805:9;10799:4;10795:20;10791:1;10780:9;10776:17;10769:47;10833:131;10959:4;10833:131;:::i;:::-;10825:139;;10552:419;;;:::o;10977:179::-;11117:31;11113:1;11105:6;11101:14;11094:55;10977:179;:::o;11162:366::-;11304:3;11325:67;11389:2;11384:3;11325:67;:::i;:::-;11318:74;;11401:93;11490:3;11401:93;:::i;:::-;11519:2;11514:3;11510:12;11503:19;;11162:366;;;:::o;11534:419::-;11700:4;11738:2;11727:9;11723:18;11715:26;;11787:9;11781:4;11777:20;11773:1;11762:9;11758:17;11751:47;11815:131;11941:4;11815:131;:::i;:::-;11807:139;;11534:419;;;:::o;11959:224::-;12099:34;12095:1;12087:6;12083:14;12076:58;12168:7;12163:2;12155:6;12151:15;12144:32;11959:224;:::o;12189:366::-;12331:3;12352:67;12416:2;12411:3;12352:67;:::i;:::-;12345:74;;12428:93;12517:3;12428:93;:::i;:::-;12546:2;12541:3;12537:12;12530:19;;12189:366;;;:::o;12561:419::-;12727:4;12765:2;12754:9;12750:18;12742:26;;12814:9;12808:4;12804:20;12800:1;12789:9;12785:17;12778:47;12842:131;12968:4;12842:131;:::i;:::-;12834:139;;12561:419;;;:::o;12986:222::-;13126:34;13122:1;13114:6;13110:14;13103:58;13195:5;13190:2;13182:6;13178:15;13171:30;12986:222;:::o;13214:366::-;13356:3;13377:67;13441:2;13436:3;13377:67;:::i;:::-;13370:74;;13453:93;13542:3;13453:93;:::i;:::-;13571:2;13566:3;13562:12;13555:19;;13214:366;;;:::o;13586:419::-;13752:4;13790:2;13779:9;13775:18;13767:26;;13839:9;13833:4;13829:20;13825:1;13814:9;13810:17;13803:47;13867:131;13993:4;13867:131;:::i;:::-;13859:139;;13586:419;;;:::o;14011:225::-;14151:34;14147:1;14139:6;14135:14;14128:58;14220:8;14215:2;14207:6;14203:15;14196:33;14011:225;:::o;14242:366::-;14384:3;14405:67;14469:2;14464:3;14405:67;:::i;:::-;14398:74;;14481:93;14570:3;14481:93;:::i;:::-;14599:2;14594:3;14590:12;14583:19;;14242:366;;;:::o;14614:419::-;14780:4;14818:2;14807:9;14803:18;14795:26;;14867:9;14861:4;14857:20;14853:1;14842:9;14838:17;14831:47;14895:131;15021:4;14895:131;:::i;:::-;14887:139;;14614:419;;;:::o;15039:225::-;15179:34;15175:1;15167:6;15163:14;15156:58;15248:8;15243:2;15235:6;15231:15;15224:33;15039:225;:::o;15270:366::-;15412:3;15433:67;15497:2;15492:3;15433:67;:::i;:::-;15426:74;;15509:93;15598:3;15509:93;:::i;:::-;15627:2;15622:3;15618:12;15611:19;;15270:366;;;:::o;15642:419::-;15808:4;15846:2;15835:9;15831:18;15823:26;;15895:9;15889:4;15885:20;15881:1;15870:9;15866:17;15859:47;15923:131;16049:4;15923:131;:::i;:::-;15915:139;;15642:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1211800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "2516",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2930",
								"decimals()": "2502",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "2602",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2589",
								"renounceOwnership()": "30314",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30754"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11117,
									"end": 22737,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 11117,
									"end": 22737,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11117,
									"end": 22737,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11618,
									"end": 11878,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 11618,
									"end": 11878,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11618,
									"end": 11878,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11618,
									"end": 11878,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11618,
									"end": 11878,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11618,
									"end": 11878,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11618,
									"end": 11878,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11618,
									"end": 11878,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11618,
									"end": 11878,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11618,
									"end": 11878,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11618,
									"end": 11878,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9581,
									"end": 9598,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9601,
									"end": 9613,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 9601,
									"end": 9611,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 9601,
									"end": 9611,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9601,
									"end": 9611,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9601,
									"end": 9613,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9601,
									"end": 9613,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 9601,
									"end": 9613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9601,
									"end": 9613,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 9601,
									"end": 9613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9581,
									"end": 9613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9581,
									"end": 9613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9628,
									"end": 9637,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9625,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9619,
									"end": 9625,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9681,
									"end": 9690,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9677,
									"end": 9678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 9575,
									"end": 9696,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "PUSH",
									"source": 0,
									"value": "4A7573747465737420546F6B656E000000000000000000000000000000000000"
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11654,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 11649,
									"end": 11673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11673,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "PUSH",
									"source": 0,
									"value": "4A54540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11690,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 11683,
									"end": 11698,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11683,
									"end": 11698,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11720,
									"end": 11722,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 11708,
									"end": 11717,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11708,
									"end": 11717,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11708,
									"end": 11722,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11747,
									"end": 11763,
									"name": "PUSH",
									"source": 0,
									"value": "1DC74BE914D16AA400000"
								},
								{
									"begin": 11732,
									"end": 11744,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11732,
									"end": 11763,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11732,
									"end": 11763,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11732,
									"end": 11763,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11732,
									"end": 11763,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11797,
									"end": 11809,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11797,
									"end": 11809,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11782,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11783,
									"end": 11793,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11773,
									"end": 11794,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11809,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11773,
									"end": 11809,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11846,
									"end": 11856,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11842,
									"end": 11843,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11858,
									"end": 11870,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11858,
									"end": 11870,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 11825,
									"end": 11871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11825,
									"end": 11871,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 11117,
									"end": 22737,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 11117,
									"end": 22737,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3665,
									"end": 3747,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3665,
									"end": 3747,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3710,
									"end": 3717,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3732,
									"end": 3742,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 3725,
									"end": 3742,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3725,
									"end": 3742,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3665,
									"end": 3747,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3665,
									"end": 3747,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5352,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 5234,
									"end": 5352,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5321,
									"end": 5345,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 5339,
									"end": 5344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5321,
									"end": 5345,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 5321,
									"end": 5345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5321,
									"end": 5345,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 5321,
									"end": 5345,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5316,
									"end": 5319,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5309,
									"end": 5346,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5358,
									"end": 5580,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 5358,
									"end": 5580,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5451,
									"end": 5455,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5489,
									"end": 5491,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5478,
									"end": 5487,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5474,
									"end": 5492,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5502,
									"end": 5573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 5570,
									"end": 5571,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5559,
									"end": 5568,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5572,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5546,
									"end": 5552,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5502,
									"end": 5573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 5502,
									"end": 5573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5502,
									"end": 5573,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 5502,
									"end": 5573,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5358,
									"end": 5580,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5358,
									"end": 5580,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5358,
									"end": 5580,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5358,
									"end": 5580,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5358,
									"end": 5580,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11117,
									"end": 22737,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 11117,
									"end": 22737,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11117,
									"end": 22737,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11117,
									"end": 22737,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11117,
									"end": 22737,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11117,
									"end": 22737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11117,
									"end": 22737,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11117,
									"end": 22737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11117,
									"end": 22737,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f936b4574c9855dbec0d9c7acf7596b6449e93eae6abb4fd924095cfb1b7fa964736f6c63430008130033",
									".code": [
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "32424AA3"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 22737,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12042,
											"end": 12140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12042,
											"end": 12140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14335,
											"end": 14532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14335,
											"end": 14532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14335,
											"end": 14532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13146,
											"end": 13252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13146,
											"end": 13252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15094,
											"end": 15350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15094,
											"end": 15350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15094,
											"end": 15350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 12988,
											"end": 13086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12988,
											"end": 13086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 11359,
											"end": 11381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 11359,
											"end": 11381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15745,
											"end": 15979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15745,
											"end": 15979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15745,
											"end": 15979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13310,
											"end": 13435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13310,
											"end": 13435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13310,
											"end": 13435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 10347,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11884,
											"end": 11977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 11884,
											"end": 11977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9764,
											"end": 9835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 9764,
											"end": 9835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 12253,
											"end": 12355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12253,
											"end": 12355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 16466,
											"end": 16893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16466,
											"end": 16893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16466,
											"end": 16893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13631,
											"end": 13820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13631,
											"end": 13820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 13631,
											"end": 13820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 13878,
											"end": 14027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13878,
											"end": 14027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13878,
											"end": 14027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 10613,
											"end": 10714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 10613,
											"end": 10714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12096,
											"end": 12109,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12128,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 12121,
											"end": 12133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 12121,
											"end": 12133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14418,
											"end": 14422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14434,
											"end": 14447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14450,
											"end": 14462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14450,
											"end": 14460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14450,
											"end": 14462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14450,
											"end": 14462,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14450,
											"end": 14462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 14462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 14462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14472,
											"end": 14504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14481,
											"end": 14486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14488,
											"end": 14495,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14497,
											"end": 14503,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14472,
											"end": 14480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14472,
											"end": 14504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14472,
											"end": 14504,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14472,
											"end": 14504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14521,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13207,
											"end": 13214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13233,
											"end": 13245,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13233,
											"end": 13245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13226,
											"end": 13245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13226,
											"end": 13245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15191,
											"end": 15195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15207,
											"end": 15222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15225,
											"end": 15235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 15225,
											"end": 15237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15237,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15225,
											"end": 15237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15207,
											"end": 15237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15207,
											"end": 15237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15247,
											"end": 15285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15263,
											"end": 15267,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15269,
											"end": 15276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15278,
											"end": 15284,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15247,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 15247,
											"end": 15285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15247,
											"end": 15285,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15247,
											"end": 15285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15295,
											"end": 15322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 15305,
											"end": 15309,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15311,
											"end": 15313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15315,
											"end": 15321,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15295,
											"end": 15304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 15295,
											"end": 15322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15295,
											"end": 15322,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 15295,
											"end": 15322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15339,
											"end": 15343,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15332,
											"end": 15343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15332,
											"end": 15343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15332,
											"end": 15343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13070,
											"end": 13079,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13070,
											"end": 13079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13070,
											"end": 13079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13070,
											"end": 13079,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13070,
											"end": 13079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13070,
											"end": 13079,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13070,
											"end": 13079,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13070,
											"end": 13079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13070,
											"end": 13079,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13070,
											"end": 13079,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13070,
											"end": 13079,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13063,
											"end": 13079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13063,
											"end": 13079,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15833,
											"end": 15837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15849,
											"end": 15862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15865,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 15865,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 15865,
											"end": 15877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15865,
											"end": 15877,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 15865,
											"end": 15877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 15877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 15877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 15951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 15896,
											"end": 15901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15903,
											"end": 15910,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 15950,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 15922,
											"end": 15927,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15929,
											"end": 15936,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15912,
											"end": 15937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15937,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 15912,
											"end": 15937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 15912,
											"end": 15950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 15912,
											"end": 15950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15950,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 15912,
											"end": 15950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 15887,
											"end": 15951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 15951,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 15887,
											"end": 15951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15968,
											"end": 15972,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15961,
											"end": 15972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15961,
											"end": 15972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15961,
											"end": 15972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13384,
											"end": 13391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13410,
											"end": 13419,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13427,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13403,
											"end": 13428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13403,
											"end": 13428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 9960,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9960,
											"end": 9972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 9942,
											"end": 10009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10450,
											"end": 10456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11963,
											"end": 11970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11963,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11963,
											"end": 11970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 11970,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11963,
											"end": 11970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11956,
											"end": 11970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11956,
											"end": 11970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9802,
											"end": 9809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9817,
											"end": 9830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9817,
											"end": 9830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12309,
											"end": 12322,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12341,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 12334,
											"end": 12348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 12334,
											"end": 12348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16559,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16575,
											"end": 16588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16591,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 16591,
											"end": 16601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 16591,
											"end": 16603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16591,
											"end": 16603,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 16591,
											"end": 16603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16575,
											"end": 16603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16575,
											"end": 16603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16613,
											"end": 16637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16640,
											"end": 16665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 16650,
											"end": 16655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16664,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16640,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16640,
											"end": 16665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16640,
											"end": 16665,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 16640,
											"end": 16665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16613,
											"end": 16665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16613,
											"end": 16665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16703,
											"end": 16718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 16699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 16718,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 16718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 16675,
											"end": 16760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16675,
											"end": 16760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16794,
											"end": 16854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 16803,
											"end": 16808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16810,
											"end": 16817,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16838,
											"end": 16853,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16819,
											"end": 16835,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16819,
											"end": 16853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16794,
											"end": 16802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16794,
											"end": 16854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16794,
											"end": 16854,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 16794,
											"end": 16854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16886,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16875,
											"end": 16886,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16875,
											"end": 16886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16875,
											"end": 16886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16875,
											"end": 16886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 13714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13726,
											"end": 13739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13742,
											"end": 13754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 13742,
											"end": 13752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13742,
											"end": 13754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13742,
											"end": 13754,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 13742,
											"end": 13754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13726,
											"end": 13754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13726,
											"end": 13754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13764,
											"end": 13792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 13774,
											"end": 13779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13781,
											"end": 13783,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13785,
											"end": 13791,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13764,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 13764,
											"end": 13792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13764,
											"end": 13792,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 13764,
											"end": 13792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13802,
											"end": 13813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13802,
											"end": 13813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13802,
											"end": 13813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13967,
											"end": 13974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13993,
											"end": 14004,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14010,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14012,
											"end": 14019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13986,
											"end": 14020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13986,
											"end": 14020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13878,
											"end": 14027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 9960,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9960,
											"end": 9972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 9942,
											"end": 10009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10681,
											"end": 10709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 10700,
											"end": 10708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10681,
											"end": 10699,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10681,
											"end": 10709,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10681,
											"end": 10709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 10681,
											"end": 10709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3747,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3665,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3742,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20348,
											"end": 20688,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 20348,
											"end": 20688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20466,
											"end": 20467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20449,
											"end": 20468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20449,
											"end": 20468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20449,
											"end": 20454,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20449,
											"end": 20468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20449,
											"end": 20468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20449,
											"end": 20468,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 20441,
											"end": 20509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20441,
											"end": 20509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 20547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20527,
											"end": 20548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20527,
											"end": 20548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20527,
											"end": 20534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20527,
											"end": 20548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20527,
											"end": 20548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20527,
											"end": 20548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 20519,
											"end": 20587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 20519,
											"end": 20587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20628,
											"end": 20634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20609,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20610,
											"end": 20615,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20598,
											"end": 20616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20617,
											"end": 20624,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20598,
											"end": 20625,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20634,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20598,
											"end": 20634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20665,
											"end": 20672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20658,
											"end": 20663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20674,
											"end": 20680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 20649,
											"end": 20681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20681,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20348,
											"end": 20688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20348,
											"end": 20688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20348,
											"end": 20688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20348,
											"end": 20688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20969,
											"end": 21380,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 20969,
											"end": 21380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21069,
											"end": 21093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21096,
											"end": 21121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 21106,
											"end": 21111,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21113,
											"end": 21120,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21096,
											"end": 21121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21121,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 21096,
											"end": 21121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21069,
											"end": 21121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21069,
											"end": 21121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21135,
											"end": 21151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21135,
											"end": 21172,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21131,
											"end": 21374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 21131,
											"end": 21374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21196,
											"end": 21212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21196,
											"end": 21222,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21196,
											"end": 21222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 21188,
											"end": 21256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 21188,
											"end": 21256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21298,
											"end": 21349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 21307,
											"end": 21312,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21314,
											"end": 21321,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21342,
											"end": 21348,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21323,
											"end": 21339,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21323,
											"end": 21348,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21298,
											"end": 21306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 21298,
											"end": 21349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21298,
											"end": 21349,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 21298,
											"end": 21349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21131,
											"end": 21374,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 21131,
											"end": 21374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21059,
											"end": 21380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20969,
											"end": 21380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20969,
											"end": 21380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20969,
											"end": 21380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20969,
											"end": 21380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 18135,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 17347,
											"end": 18135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17459,
											"end": 17460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17443,
											"end": 17461,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17443,
											"end": 17461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17443,
											"end": 17447,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17443,
											"end": 17461,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17443,
											"end": 17461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17443,
											"end": 17461,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 17435,
											"end": 17503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 17435,
											"end": 17503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17535,
											"end": 17536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17521,
											"end": 17537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17521,
											"end": 17537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17521,
											"end": 17523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17521,
											"end": 17537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17521,
											"end": 17537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17521,
											"end": 17537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 17513,
											"end": 17577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17513,
											"end": 17577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17609,
											"end": 17613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17617,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17619,
											"end": 17625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 17588,
											"end": 17626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17626,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17588,
											"end": 17626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17637,
											"end": 17656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17659,
											"end": 17668,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17669,
											"end": 17673,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17674,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17637,
											"end": 17674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17637,
											"end": 17674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17707,
											"end": 17713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17692,
											"end": 17703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17692,
											"end": 17713,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17692,
											"end": 17713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 17684,
											"end": 17756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 17684,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17822,
											"end": 17828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17808,
											"end": 17819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17808,
											"end": 17828,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17799,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17800,
											"end": 17804,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17790,
											"end": 17805,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17828,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18022,
											"end": 18028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18014,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18015,
											"end": 18017,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18005,
											"end": 18028,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18028,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18028,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18028,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18028,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18069,
											"end": 18071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18063,
											"end": 18067,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18073,
											"end": 18079,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 18054,
											"end": 18080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18054,
											"end": 18080,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 18091,
											"end": 18128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 18111,
											"end": 18115,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18117,
											"end": 18119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18121,
											"end": 18127,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18091,
											"end": 18110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 18091,
											"end": 18128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18091,
											"end": 18128,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 18091,
											"end": 18128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17425,
											"end": 18135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 18135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 18135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 18135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 18135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 11018,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10807,
											"end": 11018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10896,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10898,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10876,
											"end": 10898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10898,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10876,
											"end": 10898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10898,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 10868,
											"end": 10941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10981,
											"end": 10989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10996,
											"end": 11002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 11018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 11018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 22055,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 21964,
											"end": 22055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 22055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 22055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 22055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 22055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22733,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 22643,
											"end": 22733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5293,
											"end": 5298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 5275,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5445,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 5456,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5644,
											"end": 5651,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5668,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 5671,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 5859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5816,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 5920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 5989,
											"end": 5996,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5965,
											"end": 5987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5944,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6145,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6058,
											"end": 6146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6169,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6155,
											"end": 6170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6193,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6281,
											"end": 6285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6289,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6403,
											"end": 6409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6399,
											"end": 6416,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6462,
											"end": 6476,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 6492,
											"end": 6510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6257,
											"end": 6526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6206,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6532,
											"end": 6712,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6532,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6580,
											"end": 6657,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6577,
											"end": 6578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6681,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6674,
											"end": 6675,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6667,
											"end": 6682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6705,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6698,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6706,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 6795,
											"end": 6796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6777,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6797,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 6777,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6829,
											"end": 6830,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6811,
											"end": 6831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6831,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6811,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6854,
											"end": 6855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6875,
											"end": 6878,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6869,
											"end": 6879,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6882,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6718,
											"end": 6909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 7097,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 6915,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7051,
											"end": 7052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7039,
											"end": 7053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 7097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 7097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7266,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7330,
											"end": 7332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7325,
											"end": 7328,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 7266,
											"end": 7333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7333,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7266,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7259,
											"end": 7333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7259,
											"end": 7333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7431,
											"end": 7434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 7342,
											"end": 7435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7435,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7342,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7455,
											"end": 7458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7451,
											"end": 7463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7679,
											"end": 7681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7668,
											"end": 7677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7718,
											"end": 7738,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7703,
											"end": 7712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7756,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7882,
											"end": 7886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7756,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 7756,
											"end": 7887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7756,
											"end": 7887,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7756,
											"end": 7887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7748,
											"end": 7887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7748,
											"end": 7887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 8124,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 7900,
											"end": 8124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8074,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 8036,
											"end": 8037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8024,
											"end": 8038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8116,
											"name": "PUSH",
											"source": 1,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8104,
											"end": 8106,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8096,
											"end": 8102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 8124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 8124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8496,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 8130,
											"end": 8496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8272,
											"end": 8275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8293,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 8357,
											"end": 8359,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 8352,
											"end": 8355,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 8293,
											"end": 8360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8360,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 8293,
											"end": 8360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8286,
											"end": 8360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8286,
											"end": 8360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8369,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 8458,
											"end": 8461,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8369,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 8369,
											"end": 8462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8369,
											"end": 8462,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 8369,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8489,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8482,
											"end": 8485,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8478,
											"end": 8490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8471,
											"end": 8490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8471,
											"end": 8490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8502,
											"end": 8921,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8502,
											"end": 8921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8668,
											"end": 8672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8706,
											"end": 8708,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8695,
											"end": 8704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8691,
											"end": 8709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8765,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 8742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8730,
											"end": 8739,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8719,
											"end": 8766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8783,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 8909,
											"end": 8913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8783,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 8783,
											"end": 8914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8783,
											"end": 8914,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 8783,
											"end": 8914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8775,
											"end": 8914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8775,
											"end": 8914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8502,
											"end": 8921,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8502,
											"end": 8921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8502,
											"end": 8921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8502,
											"end": 8921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 9150,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 8927,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9067,
											"end": 9101,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 9063,
											"end": 9064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9061,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9051,
											"end": 9065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9044,
											"end": 9102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9136,
											"end": 9142,
											"name": "PUSH",
											"source": 1,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9131,
											"end": 9133,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9123,
											"end": 9129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 9150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 9150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9156,
											"end": 9522,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 9156,
											"end": 9522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9298,
											"end": 9301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 9383,
											"end": 9385,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9378,
											"end": 9381,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9319,
											"end": 9386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 9319,
											"end": 9386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9319,
											"end": 9386,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 9319,
											"end": 9386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9312,
											"end": 9386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9312,
											"end": 9386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 9484,
											"end": 9487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 9395,
											"end": 9488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9488,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 9395,
											"end": 9488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9515,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9504,
											"end": 9516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9156,
											"end": 9522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9156,
											"end": 9522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9156,
											"end": 9522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9156,
											"end": 9522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9528,
											"end": 9947,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 9528,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9694,
											"end": 9698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9732,
											"end": 9734,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9721,
											"end": 9730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9717,
											"end": 9735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9709,
											"end": 9735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9709,
											"end": 9735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9775,
											"end": 9779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9767,
											"end": 9768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9756,
											"end": 9765,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 9769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9745,
											"end": 9792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 9935,
											"end": 9939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 9809,
											"end": 9940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9940,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 9809,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9528,
											"end": 9947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9528,
											"end": 9947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9528,
											"end": 9947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9528,
											"end": 9947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9953,
											"end": 10174,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 9953,
											"end": 10174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10093,
											"end": 10127,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 10089,
											"end": 10090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10081,
											"end": 10087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10070,
											"end": 10128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10162,
											"end": 10166,
											"name": "PUSH",
											"source": 1,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10157,
											"end": 10159,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10149,
											"end": 10155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10145,
											"end": 10160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10138,
											"end": 10167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9953,
											"end": 10174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9953,
											"end": 10174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10546,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 10180,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10322,
											"end": 10325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10343,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 10407,
											"end": 10409,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10402,
											"end": 10405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10343,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10343,
											"end": 10410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10343,
											"end": 10410,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 10343,
											"end": 10410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10336,
											"end": 10410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10336,
											"end": 10410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10419,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 10508,
											"end": 10511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10419,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 10419,
											"end": 10512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10419,
											"end": 10512,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 10419,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10539,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10532,
											"end": 10535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10528,
											"end": 10540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10521,
											"end": 10540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10521,
											"end": 10540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10971,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 10552,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10718,
											"end": 10722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10756,
											"end": 10758,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10745,
											"end": 10754,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10741,
											"end": 10759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10733,
											"end": 10759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10733,
											"end": 10759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10805,
											"end": 10814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10815,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10780,
											"end": 10789,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10776,
											"end": 10793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10769,
											"end": 10816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10833,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10833,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 10833,
											"end": 10964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10833,
											"end": 10964,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 10833,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10825,
											"end": 10964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10825,
											"end": 10964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10977,
											"end": 11156,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 10977,
											"end": 11156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11117,
											"end": 11148,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 11113,
											"end": 11114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11101,
											"end": 11115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11094,
											"end": 11149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10977,
											"end": 11156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10977,
											"end": 11156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11528,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 11162,
											"end": 11528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11304,
											"end": 11307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11325,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11389,
											"end": 11391,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 11384,
											"end": 11387,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11325,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 11325,
											"end": 11392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11325,
											"end": 11392,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11325,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11318,
											"end": 11392,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11318,
											"end": 11392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11401,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 11490,
											"end": 11493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11401,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 11401,
											"end": 11494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11401,
											"end": 11494,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 11401,
											"end": 11494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11519,
											"end": 11521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11514,
											"end": 11517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11510,
											"end": 11522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11503,
											"end": 11522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11503,
											"end": 11522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11953,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 11534,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11738,
											"end": 11740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11727,
											"end": 11736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11723,
											"end": 11741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11715,
											"end": 11741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11715,
											"end": 11741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11787,
											"end": 11796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11781,
											"end": 11785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11777,
											"end": 11797,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11773,
											"end": 11774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11762,
											"end": 11771,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11751,
											"end": 11798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11815,
											"end": 11946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 11941,
											"end": 11945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11815,
											"end": 11946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 11815,
											"end": 11946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11815,
											"end": 11946,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 11815,
											"end": 11946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11807,
											"end": 11946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11807,
											"end": 11946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11959,
											"end": 12183,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 11959,
											"end": 12183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12099,
											"end": 12133,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 12095,
											"end": 12096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12087,
											"end": 12093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12083,
											"end": 12097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12076,
											"end": 12134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12168,
											"end": 12175,
											"name": "PUSH",
											"source": 1,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12163,
											"end": 12165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12155,
											"end": 12161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12151,
											"end": 12166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12144,
											"end": 12176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11959,
											"end": 12183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11959,
											"end": 12183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12189,
											"end": 12555,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 12189,
											"end": 12555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12331,
											"end": 12334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12352,
											"end": 12419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 12416,
											"end": 12418,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 12411,
											"end": 12414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 12419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 12352,
											"end": 12419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 12419,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 12352,
											"end": 12419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12345,
											"end": 12419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12345,
											"end": 12419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12428,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 12517,
											"end": 12520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12428,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 12428,
											"end": 12521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12428,
											"end": 12521,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 12428,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12546,
											"end": 12548,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12541,
											"end": 12544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12537,
											"end": 12549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12530,
											"end": 12549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12530,
											"end": 12549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12189,
											"end": 12555,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12189,
											"end": 12555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12189,
											"end": 12555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12189,
											"end": 12555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12561,
											"end": 12980,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 12561,
											"end": 12980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12727,
											"end": 12731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12765,
											"end": 12767,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12754,
											"end": 12763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12742,
											"end": 12768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12742,
											"end": 12768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12814,
											"end": 12823,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12804,
											"end": 12824,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 12801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12789,
											"end": 12798,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12785,
											"end": 12802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12778,
											"end": 12825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 12968,
											"end": 12972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 12842,
											"end": 12973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12973,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 12842,
											"end": 12973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12834,
											"end": 12973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12834,
											"end": 12973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12561,
											"end": 12980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12561,
											"end": 12980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12561,
											"end": 12980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12561,
											"end": 12980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12986,
											"end": 13208,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 12986,
											"end": 13208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13126,
											"end": 13160,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 13122,
											"end": 13123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13110,
											"end": 13124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13103,
											"end": 13161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13195,
											"end": 13200,
											"name": "PUSH",
											"source": 1,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13190,
											"end": 13192,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13182,
											"end": 13188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13178,
											"end": 13193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13171,
											"end": 13201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12986,
											"end": 13208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12986,
											"end": 13208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13214,
											"end": 13580,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 13214,
											"end": 13580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13356,
											"end": 13359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13377,
											"end": 13444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 13441,
											"end": 13443,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 13436,
											"end": 13439,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13377,
											"end": 13444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 13377,
											"end": 13444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13377,
											"end": 13444,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 13377,
											"end": 13444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13370,
											"end": 13444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13370,
											"end": 13444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 13542,
											"end": 13545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 13453,
											"end": 13546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13546,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 13453,
											"end": 13546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13571,
											"end": 13573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13566,
											"end": 13569,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13562,
											"end": 13574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13555,
											"end": 13574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13555,
											"end": 13574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13214,
											"end": 13580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13214,
											"end": 13580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13214,
											"end": 13580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13214,
											"end": 13580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13586,
											"end": 14005,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 13586,
											"end": 14005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13752,
											"end": 13756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13790,
											"end": 13792,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13779,
											"end": 13788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13775,
											"end": 13793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13767,
											"end": 13793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13767,
											"end": 13793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13839,
											"end": 13848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13833,
											"end": 13837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13829,
											"end": 13849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13825,
											"end": 13826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13814,
											"end": 13823,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13810,
											"end": 13827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13803,
											"end": 13850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13867,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 13993,
											"end": 13997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13867,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 13867,
											"end": 13998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13867,
											"end": 13998,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 13867,
											"end": 13998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13859,
											"end": 13998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13859,
											"end": 13998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13586,
											"end": 14005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13586,
											"end": 14005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13586,
											"end": 14005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13586,
											"end": 14005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14236,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 14011,
											"end": 14236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14185,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 14147,
											"end": 14148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14139,
											"end": 14145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14135,
											"end": 14149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14128,
											"end": 14186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14220,
											"end": 14228,
											"name": "PUSH",
											"source": 1,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14215,
											"end": 14217,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14207,
											"end": 14213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14203,
											"end": 14218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14196,
											"end": 14229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14242,
											"end": 14608,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14242,
											"end": 14608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14384,
											"end": 14387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14405,
											"end": 14472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14469,
											"end": 14471,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 14464,
											"end": 14467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14405,
											"end": 14472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 14405,
											"end": 14472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14405,
											"end": 14472,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14405,
											"end": 14472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14398,
											"end": 14472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14398,
											"end": 14472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14481,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 14570,
											"end": 14573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14481,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 14481,
											"end": 14574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14481,
											"end": 14574,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 14481,
											"end": 14574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14599,
											"end": 14601,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14594,
											"end": 14597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14590,
											"end": 14602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14583,
											"end": 14602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14583,
											"end": 14602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14242,
											"end": 14608,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14242,
											"end": 14608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14242,
											"end": 14608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14242,
											"end": 14608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 15033,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 14614,
											"end": 15033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14780,
											"end": 14784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14818,
											"end": 14820,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14807,
											"end": 14816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14803,
											"end": 14821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14795,
											"end": 14821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14795,
											"end": 14821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14867,
											"end": 14876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14861,
											"end": 14865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14877,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14853,
											"end": 14854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14842,
											"end": 14851,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14838,
											"end": 14855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14831,
											"end": 14878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14895,
											"end": 15026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 15021,
											"end": 15025,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14895,
											"end": 15026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14895,
											"end": 15026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14895,
											"end": 15026,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 14895,
											"end": 15026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14887,
											"end": 15026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14887,
											"end": 15026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 15033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 15033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 15033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 15033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15039,
											"end": 15264,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 15039,
											"end": 15264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15179,
											"end": 15213,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 15175,
											"end": 15176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15167,
											"end": 15173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15163,
											"end": 15177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15156,
											"end": 15214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15248,
											"end": 15256,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15243,
											"end": 15245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15235,
											"end": 15241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15231,
											"end": 15246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15224,
											"end": 15257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15039,
											"end": 15264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15039,
											"end": 15264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15270,
											"end": 15636,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 15270,
											"end": 15636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15412,
											"end": 15415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15433,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 15497,
											"end": 15499,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 15492,
											"end": 15495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15433,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 15433,
											"end": 15500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15433,
											"end": 15500,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 15433,
											"end": 15500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15426,
											"end": 15500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15426,
											"end": 15500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15509,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 15598,
											"end": 15601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15509,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 15509,
											"end": 15602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15509,
											"end": 15602,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 15509,
											"end": 15602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15627,
											"end": 15629,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15622,
											"end": 15625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15618,
											"end": 15630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15611,
											"end": 15630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15611,
											"end": 15630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15270,
											"end": 15636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15270,
											"end": 15636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15270,
											"end": 15636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15270,
											"end": 15636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15642,
											"end": 16061,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 15642,
											"end": 16061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15808,
											"end": 15812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15846,
											"end": 15848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15835,
											"end": 15844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15831,
											"end": 15849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15823,
											"end": 15849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15823,
											"end": 15849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15895,
											"end": 15904,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15889,
											"end": 15893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15885,
											"end": 15905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15881,
											"end": 15882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15870,
											"end": 15879,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15866,
											"end": 15883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15859,
											"end": 15906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15923,
											"end": 16054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 16049,
											"end": 16053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15923,
											"end": 16054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 15923,
											"end": 16054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15923,
											"end": 16054,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 15923,
											"end": 16054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15915,
											"end": 16054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15915,
											"end": 16054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15642,
											"end": 16061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15642,
											"end": 16061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15642,
											"end": 16061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15642,
											"end": 16061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":\"BEP20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":{\"keccak256\":\"0x8d39ec59cc2cbd18de60fd2087db2373d67aed7ad273383d3016c3a1f7aa31f1\",\"urls\":[\"bzz-raw://fe04a4602e097f7c02a0f00c0b53c809efa5733aa5f91e35a7bae584c481d657\",\"dweb:/ipfs/QmZJc5aM1N29bctquACPn2JQng6X3EoKALz5rGaCvwnkSf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 324,
								"contract": "contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol:BEP20",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 450,
								"contract": "contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol:BEP20",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 456,
								"contract": "contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol:BEP20",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 458,
								"contract": "contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol:BEP20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 460,
								"contract": "contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol:BEP20",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 462,
								"contract": "contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol:BEP20",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 464,
								"contract": "contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol:BEP20",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3472:3965  contract Context {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3643:3661  constructor () { } */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3472:3965  contract Context {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3472:3965  contract Context {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220583e2d532bced4e5c8d9bf7fe188d6b5ac44021ef6c880fe709fa93cc998939864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220583e2d532bced4e5c8d9bf7fe188d6b5ac44021ef6c880fe709fa93cc998939864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC RETURNDATACOPY 0x2D MSTORE8 0x2B 0xCE 0xD4 0xE5 0xC8 0xD9 0xBF PUSH32 0xE188D6B5AC44021EF6C880FE709FA93CC998939864736F6C6343000813003300 ",
							"sourceMap": "3472:493:0:-:0;;;3643:18;;;;;;;;;;3472:493;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220583e2d532bced4e5c8d9bf7fe188d6b5ac44021ef6c880fe709fa93cc998939864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC RETURNDATACOPY 0x2D MSTORE8 0x2B 0xCE 0xD4 0xE5 0xC8 0xD9 0xBF PUSH32 0xE188D6B5AC44021EF6C880FE709FA93CC998939864736F6C6343000813003300 ",
							"sourceMap": "3472:493:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_msgData()": "infinite",
								"_msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3472,
									"end": 3965,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 3472,
									"end": 3965,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3472,
									"end": 3965,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3472,
									"end": 3965,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3472,
									"end": 3965,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3472,
									"end": 3965,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3472,
									"end": 3965,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3472,
									"end": 3965,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3472,
									"end": 3965,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3472,
									"end": 3965,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220583e2d532bced4e5c8d9bf7fe188d6b5ac44021ef6c880fe709fa93cc998939864736f6c63430008130033",
									".code": [
										{
											"begin": 3472,
											"end": 3965,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3472,
											"end": 3965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3472,
											"end": 3965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3965,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":{\"keccak256\":\"0x8d39ec59cc2cbd18de60fd2087db2373d67aed7ad273383d3016c3a1f7aa31f1\",\"urls\":[\"bzz-raw://fe04a4602e097f7c02a0f00c0b53c809efa5733aa5f91e35a7bae584c481d657\",\"dweb:/ipfs/QmZJc5aM1N29bctquACPn2JQng6X3EoKALz5rGaCvwnkSf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":\"IBEP20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":{\"keccak256\":\"0x8d39ec59cc2cbd18de60fd2087db2373d67aed7ad273383d3016c3a1f7aa31f1\",\"urls\":[\"bzz-raw://fe04a4602e097f7c02a0f00c0b53c809efa5733aa5f91e35a7bae584c481d657\",\"dweb:/ipfs/QmZJc5aM1N29bctquACPn2JQng6X3EoKALz5rGaCvwnkSf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9322:11020  contract Ownable is Context {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9559:9696  constructor ()  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9581:9598  address msgSender */\n  0x00\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9601:9613  _msgSender() */\n  tag_6\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9601:9611  _msgSender */\n  shl(0x20, tag_7)\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9601:9613  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9581:9613  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9628:9637  msgSender */\n  dup1\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9619:9625  _owner */\n  0x00\n  dup1\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9619:9637  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9681:9690  msgSender */\n  dup1\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9648:9691  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9677:9678  0 */\n  0x00\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9648:9691  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9575:9696  {... */\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9322:11020  contract Ownable is Context {... */\n  jump(tag_8)\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3665:3747  function _msgSender() internal view returns (address) {... */\ntag_7:\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3710:3717  address */\n  0x00\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3732:3742  msg.sender */\n  caller\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3725:3742  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3665:3747  function _msgSender() internal view returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9322:11020  contract Ownable is Context {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9322:11020  contract Ownable is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10347:10474  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9764:9835  function owner() public view returns (address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10613:10714  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10347:10474  function renounceOwnership() public onlyOwner {... */\n    tag_7:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9960:9972  _msgSender() */\n      tag_17\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9960:9970  _msgSender */\n      tag_18\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9960:9972  _msgSender() */\n      jump\t// in\n    tag_17:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9950:9972  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9950:9956  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9950:9972  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9942:10009  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10441:10442  0 */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10404:10444  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10425:10431  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10404:10444  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10467:10468  0 */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10450:10456  _owner */\n      dup1\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10450:10469  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10347:10474  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9764:9835  function owner() public view returns (address) {... */\n    tag_9:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9802:9809  address */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9824:9830  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9817:9830  return _owner */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9764:9835  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10613:10714  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_15:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9960:9972  _msgSender() */\n      tag_25\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9960:9970  _msgSender */\n      tag_18\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9960:9972  _msgSender() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9950:9972  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9950:9956  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9950:9972  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":9942:10009  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10681:10709  _transferOwnership(newOwner) */\n      tag_29\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10700:10708  newOwner */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10681:10699  _transferOwnership */\n      tag_30\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10681:10709  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_29:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10613:10714  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3665:3747  function _msgSender() internal view returns (address) {... */\n    tag_18:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3710:3717  address */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3732:3742  msg.sender */\n      caller\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3725:3742  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":3665:3747  function _msgSender() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10807:11018  function _transferOwnership(address newOwner) internal {... */\n    tag_30:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10896:10897  0 */\n      0x00\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10876:10898  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10876:10884  newOwner */\n      dup2\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10876:10898  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10868:10941  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10981:10989  newOwner */\n      dup1\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10952:10990  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10973:10979  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10952:10990  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":11005:11013  newOwner */\n      dup1\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10996:11002  _owner */\n      0x00\n      dup1\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10996:11013  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":10807:11018  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_36:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_37:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_52\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_36\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_38:\n        /* \"#utility.yul\":328:352   */\n      tag_54\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_37\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_11:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_56\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_38\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_40:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_42:\n        /* \"#utility.yul\":993:1017   */\n      tag_61\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_37\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_62:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_43:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_64\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_42\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_14:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_67\n      tag_40\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1269:1388   */\n    tag_66:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_68\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_43\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1697   */\n    tag_44:\n        /* \"#utility.yul\":1612:1623   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup3\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1634:1653   */\n      mstore\n        /* \"#utility.yul\":1686:1690   */\n      0x20\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1691   */\n      add\n        /* \"#utility.yul\":1662:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1885   */\n    tag_45:\n        /* \"#utility.yul\":1843:1877   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1831:1837   */\n      dup3\n        /* \"#utility.yul\":1827:1841   */\n      add\n        /* \"#utility.yul\":1820:1878   */\n      mstore\n        /* \"#utility.yul\":1703:1885   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1891:2257   */\n    tag_46:\n        /* \"#utility.yul\":2033:2036   */\n      0x00\n        /* \"#utility.yul\":2054:2121   */\n      tag_72\n        /* \"#utility.yul\":2118:2120   */\n      0x20\n        /* \"#utility.yul\":2113:2116   */\n      dup4\n        /* \"#utility.yul\":2054:2121   */\n      tag_44\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2047:2121   */\n      swap2\n      pop\n        /* \"#utility.yul\":2130:2223   */\n      tag_73\n        /* \"#utility.yul\":2219:2222   */\n      dup3\n        /* \"#utility.yul\":2130:2223   */\n      tag_45\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2248:2250   */\n      0x20\n        /* \"#utility.yul\":2243:2246   */\n      dup3\n        /* \"#utility.yul\":2239:2251   */\n      add\n        /* \"#utility.yul\":2232:2251   */\n      swap1\n      pop\n        /* \"#utility.yul\":1891:2257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2263:2682   */\n    tag_21:\n        /* \"#utility.yul\":2429:2433   */\n      0x00\n        /* \"#utility.yul\":2467:2469   */\n      0x20\n        /* \"#utility.yul\":2456:2465   */\n      dup3\n        /* \"#utility.yul\":2452:2470   */\n      add\n        /* \"#utility.yul\":2444:2470   */\n      swap1\n      pop\n        /* \"#utility.yul\":2516:2525   */\n      dup2\n        /* \"#utility.yul\":2510:2514   */\n      dup2\n        /* \"#utility.yul\":2506:2526   */\n      sub\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2491:2500   */\n      dup4\n        /* \"#utility.yul\":2487:2504   */\n      add\n        /* \"#utility.yul\":2480:2527   */\n      mstore\n        /* \"#utility.yul\":2544:2675   */\n      tag_75\n        /* \"#utility.yul\":2670:2674   */\n      dup2\n        /* \"#utility.yul\":2544:2675   */\n      tag_46\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2536:2675   */\n      swap1\n      pop\n        /* \"#utility.yul\":2263:2682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2688:2913   */\n    tag_47:\n        /* \"#utility.yul\":2828:2862   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2824:2825   */\n      0x00\n        /* \"#utility.yul\":2816:2822   */\n      dup3\n        /* \"#utility.yul\":2812:2826   */\n      add\n        /* \"#utility.yul\":2805:2863   */\n      mstore\n        /* \"#utility.yul\":2897:2905   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2892:2894   */\n      0x20\n        /* \"#utility.yul\":2884:2890   */\n      dup3\n        /* \"#utility.yul\":2880:2895   */\n      add\n        /* \"#utility.yul\":2873:2906   */\n      mstore\n        /* \"#utility.yul\":2688:2913   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2919:3285   */\n    tag_48:\n        /* \"#utility.yul\":3061:3064   */\n      0x00\n        /* \"#utility.yul\":3082:3149   */\n      tag_78\n        /* \"#utility.yul\":3146:3148   */\n      0x26\n        /* \"#utility.yul\":3141:3144   */\n      dup4\n        /* \"#utility.yul\":3082:3149   */\n      tag_44\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3075:3149   */\n      swap2\n      pop\n        /* \"#utility.yul\":3158:3251   */\n      tag_79\n        /* \"#utility.yul\":3247:3250   */\n      dup3\n        /* \"#utility.yul\":3158:3251   */\n      tag_47\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":3276:3278   */\n      0x40\n        /* \"#utility.yul\":3271:3274   */\n      dup3\n        /* \"#utility.yul\":3267:3279   */\n      add\n        /* \"#utility.yul\":3260:3279   */\n      swap1\n      pop\n        /* \"#utility.yul\":2919:3285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3291:3710   */\n    tag_35:\n        /* \"#utility.yul\":3457:3461   */\n      0x00\n        /* \"#utility.yul\":3495:3497   */\n      0x20\n        /* \"#utility.yul\":3484:3493   */\n      dup3\n        /* \"#utility.yul\":3480:3498   */\n      add\n        /* \"#utility.yul\":3472:3498   */\n      swap1\n      pop\n        /* \"#utility.yul\":3544:3553   */\n      dup2\n        /* \"#utility.yul\":3538:3542   */\n      dup2\n        /* \"#utility.yul\":3534:3554   */\n      sub\n        /* \"#utility.yul\":3530:3531   */\n      0x00\n        /* \"#utility.yul\":3519:3528   */\n      dup4\n        /* \"#utility.yul\":3515:3532   */\n      add\n        /* \"#utility.yul\":3508:3555   */\n      mstore\n        /* \"#utility.yul\":3572:3703   */\n      tag_81\n        /* \"#utility.yul\":3698:3702   */\n      dup2\n        /* \"#utility.yul\":3572:3703   */\n      tag_48\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3564:3703   */\n      swap1\n      pop\n        /* \"#utility.yul\":3291:3710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203af256150ed0a126100307c0febb1c56b3f7ef95330f19a65ced0175519656aa64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_352": {
									"entryPoint": null,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_113": {
									"entryPoint": 196,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b6105da806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101dd565b604051610065919061041c565b60405180910390f35b61008860048036038101906100839190610468565b610206565b005b6100926102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906104f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020e6102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610292906104f2565b60405180910390fd5b6102a4816102af565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031590610584565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610406826103db565b9050919050565b610416816103fb565b82525050565b6000602082019050610431600083018461040d565b92915050565b600080fd5b610445816103fb565b811461045057600080fd5b50565b6000813590506104628161043c565b92915050565b60006020828403121561047e5761047d610437565b5b600061048c84828501610453565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006104dc602083610495565b91506104e7826104a6565b602082019050919050565b6000602082019050818103600083015261050b816104cf565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061056e602683610495565b915061057982610512565b604082019050919050565b6000602082019050818103600083015261059d81610561565b905091905056fea26469706673582212203af256150ed0a126100307c0febb1c56b3f7ef95330f19a65ced0175519656aa64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x21 PUSH2 0xC4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5DA DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x468 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x2AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315 SWAP1 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x406 DUP3 PUSH2 0x3DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x416 DUP2 PUSH2 0x3FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x431 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x445 DUP2 PUSH2 0x3FB JUMP JUMPDEST DUP2 EQ PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x462 DUP2 PUSH2 0x43C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48C DUP5 DUP3 DUP6 ADD PUSH2 0x453 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC PUSH1 0x20 DUP4 PUSH2 0x495 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E7 DUP3 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x50B DUP2 PUSH2 0x4CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56E PUSH1 0x26 DUP4 PUSH2 0x495 JUMP JUMPDEST SWAP2 POP PUSH2 0x579 DUP3 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x59D DUP2 PUSH2 0x561 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE CALLCODE JUMP ISZERO 0xE 0xD0 LOG1 0x26 LT SUB SMOD 0xC0 INVALID 0xBB SHR JUMP 0xB3 0xF7 0xEF SWAP6 CALLER 0xF NOT 0xA6 0x5C 0xED ADD PUSH22 0x519656AA64736F6C6343000813003300000000000000 ",
							"sourceMap": "9322:1698:0:-:0;;;9559:137;;;;;;;;;;9581:17;9601:12;:10;;;:12;;:::i;:::-;9581:32;;9628:9;9619:6;;:18;;;;;;;;;;;;;;;;;;9681:9;9648:43;;9677:1;9648:43;;;;;;;;;;;;9575:121;9322:1698;;3665:82;3710:7;3732:10;3725:17;;3665:82;:::o;9322:1698::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_113": {
									"entryPoint": 679,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_435": {
									"entryPoint": 687,
									"id": 435,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_361": {
									"entryPoint": 477,
									"id": 361,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_396": {
									"entryPoint": 138,
									"id": 396,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_409": {
									"entryPoint": 518,
									"id": 409,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3713:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:1",
														"type": ""
													}
												],
												"src": "593:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1020:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:43:1"
															},
															"nodeType": "YulIf",
															"src": "973:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "956:5:1",
														"type": ""
													}
												],
												"src": "920:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1078:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1086:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1094:5:1",
														"type": ""
													}
												],
												"src": "1048:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1305:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:32:1"
															},
															"nodeType": "YulIf",
															"src": "1269:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1398:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1442:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1240:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1252:6:1",
														"type": ""
													}
												],
												"src": "1193:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1624:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1634:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1662:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1662:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1596:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1601:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1612:11:1",
														"type": ""
													}
												],
												"src": "1528:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1809:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1843:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1820:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1801:6:1",
														"type": ""
													}
												],
												"src": "1703:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2037:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2047:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2113:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2054:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2047:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2219:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "2130:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2130:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2232:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2243:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2248:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2239:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2232:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2025:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2033:3:1",
														"type": ""
													}
												],
												"src": "1891:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2434:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2444:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2456:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2467:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2452:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2452:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2444:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2491:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2487:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2510:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2516:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2506:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2480:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2480:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2536:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2670:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2544:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2536:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2414:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2429:4:1",
														"type": ""
													}
												],
												"src": "2263:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2794:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2816:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2824:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2828:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2805:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2805:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2805:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2884:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2892:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2880:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2897:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2873:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2873:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2786:6:1",
														"type": ""
													}
												],
												"src": "2688:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3075:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3141:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3146:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3082:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3075:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3247:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "3158:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3158:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3260:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3267:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3260:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3053:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3061:3:1",
														"type": ""
													}
												],
												"src": "2919:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3462:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3472:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3484:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3495:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3480:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3472:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3519:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3530:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3538:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3544:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3534:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3508:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3508:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3564:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3698:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3572:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3564:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3442:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3457:4:1",
														"type": ""
													}
												],
												"src": "3291:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101dd565b604051610065919061041c565b60405180910390f35b61008860048036038101906100839190610468565b610206565b005b6100926102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906104f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020e6102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610292906104f2565b60405180910390fd5b6102a4816102af565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031590610584565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610406826103db565b9050919050565b610416816103fb565b82525050565b6000602082019050610431600083018461040d565b92915050565b600080fd5b610445816103fb565b811461045057600080fd5b50565b6000813590506104628161043c565b92915050565b60006020828403121561047e5761047d610437565b5b600061048c84828501610453565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006104dc602083610495565b91506104e7826104a6565b602082019050919050565b6000602082019050818103600083015261050b816104cf565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061056e602683610495565b915061057982610512565b604082019050919050565b6000602082019050818103600083015261059d81610561565b905091905056fea26469706673582212203af256150ed0a126100307c0febb1c56b3f7ef95330f19a65ced0175519656aa64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x468 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x2AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315 SWAP1 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x406 DUP3 PUSH2 0x3DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x416 DUP2 PUSH2 0x3FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x431 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x445 DUP2 PUSH2 0x3FB JUMP JUMPDEST DUP2 EQ PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x462 DUP2 PUSH2 0x43C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48C DUP5 DUP3 DUP6 ADD PUSH2 0x453 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC PUSH1 0x20 DUP4 PUSH2 0x495 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E7 DUP3 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x50B DUP2 PUSH2 0x4CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56E PUSH1 0x26 DUP4 PUSH2 0x495 JUMP JUMPDEST SWAP2 POP PUSH2 0x579 DUP3 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x59D DUP2 PUSH2 0x561 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE CALLCODE JUMP ISZERO 0xE 0xD0 LOG1 0x26 LT SUB SMOD 0xC0 INVALID 0xBB SHR JUMP 0xB3 0xF7 0xEF SWAP6 CALLER 0xF NOT 0xA6 0x5C 0xED ADD PUSH22 0x519656AA64736F6C6343000813003300000000000000 ",
							"sourceMap": "9322:1698:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10347:127;;;:::i;:::-;;9764:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10613:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10347:127;9960:12;:10;:12::i;:::-;9950:22;;:6;;;;;;;;;;:22;;;9942:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;10441:1:::1;10404:40;;10425:6;::::0;::::1;;;;;;;;10404:40;;;;;;;;;;;;10467:1;10450:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;10347:127::o:0;9764:71::-;9802:7;9824:6;;;;;;;;;;;9817:13;;9764:71;:::o;10613:101::-;9960:12;:10;:12::i;:::-;9950:22;;:6;;;;;;;;;;:22;;;9942:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;10681:28:::1;10700:8;10681:18;:28::i;:::-;10613:101:::0;:::o;3665:82::-;3710:7;3732:10;3725:17;;3665:82;:::o;10807:211::-;10896:1;10876:22;;:8;:22;;;10868:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;10981:8;10952:38;;10973:6;;;;;;;;;;10952:38;;;;;;;;;;;;11005:8;10996:6;;:17;;;;;;;;;;;;;;;;;;10807:211;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:182::-;1843:34;1839:1;1831:6;1827:14;1820:58;1703:182;:::o;1891:366::-;2033:3;2054:67;2118:2;2113:3;2054:67;:::i;:::-;2047:74;;2130:93;2219:3;2130:93;:::i;:::-;2248:2;2243:3;2239:12;2232:19;;1891:366;;;:::o;2263:419::-;2429:4;2467:2;2456:9;2452:18;2444:26;;2516:9;2510:4;2506:20;2502:1;2491:9;2487:17;2480:47;2544:131;2670:4;2544:131;:::i;:::-;2536:139;;2263:419;;;:::o;2688:225::-;2828:34;2824:1;2816:6;2812:14;2805:58;2897:8;2892:2;2884:6;2880:15;2873:33;2688:225;:::o;2919:366::-;3061:3;3082:67;3146:2;3141:3;3082:67;:::i;:::-;3075:74;;3158:93;3247:3;3158:93;:::i;:::-;3276:2;3271:3;3267:12;3260:19;;2919:366;;;:::o;3291:419::-;3457:4;3495:2;3484:9;3480:18;3472:26;;3544:9;3538:4;3534:20;3530:1;3519:9;3515:17;3508:47;3572:131;3698:4;3572:131;:::i;:::-;3564:139;;3291:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "299600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2522",
								"renounceOwnership()": "30269",
								"transferOwnership(address)": "30688"
							},
							"internal": {
								"_transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9322,
									"end": 11020,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 9322,
									"end": 11020,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9322,
									"end": 11020,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9559,
									"end": 9696,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 9559,
									"end": 9696,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9559,
									"end": 9696,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9559,
									"end": 9696,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9559,
									"end": 9696,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9559,
									"end": 9696,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9559,
									"end": 9696,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9559,
									"end": 9696,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 9559,
									"end": 9696,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9559,
									"end": 9696,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9559,
									"end": 9696,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9581,
									"end": 9598,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9601,
									"end": 9613,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 9601,
									"end": 9611,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 9601,
									"end": 9611,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9601,
									"end": 9611,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9601,
									"end": 9613,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9601,
									"end": 9613,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 9601,
									"end": 9613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9601,
									"end": 9613,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 9601,
									"end": 9613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9581,
									"end": 9613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9581,
									"end": 9613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9628,
									"end": 9637,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9625,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9619,
									"end": 9625,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9681,
									"end": 9690,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9677,
									"end": 9678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9648,
									"end": 9691,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 9575,
									"end": 9696,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9322,
									"end": 11020,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 9322,
									"end": 11020,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3665,
									"end": 3747,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3665,
									"end": 3747,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3710,
									"end": 3717,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3732,
									"end": 3742,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 3725,
									"end": 3742,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3725,
									"end": 3742,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3665,
									"end": 3747,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3665,
									"end": 3747,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9322,
									"end": 11020,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 9322,
									"end": 11020,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9322,
									"end": 11020,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9322,
									"end": 11020,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9322,
									"end": 11020,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9322,
									"end": 11020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9322,
									"end": 11020,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9322,
									"end": 11020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9322,
									"end": 11020,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203af256150ed0a126100307c0febb1c56b3f7ef95330f19a65ced0175519656aa64736f6c63430008130033",
									".code": [
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 11020,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10347,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9764,
											"end": 9835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9764,
											"end": 9835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 10613,
											"end": 10714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10613,
											"end": 10714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10347,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9960,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9960,
											"end": 9972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9942,
											"end": 10009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10425,
											"end": 10431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10444,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10450,
											"end": 10456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9802,
											"end": 9809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9817,
											"end": 9830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9817,
											"end": 9830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9960,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9960,
											"end": 9972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9942,
											"end": 10009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10681,
											"end": 10709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10700,
											"end": 10708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10681,
											"end": 10699,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10681,
											"end": 10709,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10681,
											"end": 10709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10681,
											"end": 10709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3747,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3665,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3742,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 11018,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10807,
											"end": 11018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10896,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10898,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10876,
											"end": 10898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10898,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10876,
											"end": 10898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10898,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 10868,
											"end": 10941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 10868,
											"end": 10941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10981,
											"end": 10989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10990,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10996,
											"end": 11002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 11018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 11018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1452,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1885,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1703,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2054,
											"end": 2121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2219,
											"end": 2222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2130,
											"end": 2223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2223,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2130,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2239,
											"end": 2251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 2257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2456,
											"end": 2465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2670,
											"end": 2674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2544,
											"end": 2675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2675,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2544,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2913,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2688,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2824,
											"end": 2825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2905,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2892,
											"end": 2894,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2884,
											"end": 2890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 2906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3146,
											"end": 3148,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3141,
											"end": 3144,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3082,
											"end": 3149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3247,
											"end": 3250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3158,
											"end": 3251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 3285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3497,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3553,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3554,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3698,
											"end": 3702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3572,
											"end": 3703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":{\"keccak256\":\"0x8d39ec59cc2cbd18de60fd2087db2373d67aed7ad273383d3016c3a1f7aa31f1\",\"urls\":[\"bzz-raw://fe04a4602e097f7c02a0f00c0b53c809efa5733aa5f91e35a7bae584c481d657\",\"dweb:/ipfs/QmZJc5aM1N29bctquACPn2JQng6X3EoKALz5rGaCvwnkSf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 324,
								"contract": "contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":4531:8825  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":4531:8825  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013eee986d1f02b57b0528a743a3561c66c030477827414e9d7867b8f6a2c1a6964736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122013eee986d1f02b57b0528a743a3561c66c030477827414e9d7867b8f6a2c1a6964736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xEE 0xE9 DUP7 0xD1 CREATE 0x2B JUMPI 0xB0 MSTORE DUP11 PUSH21 0x3A3561C66C030477827414E9D7867B8F6A2C1A6964 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "4531:4294:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122013eee986d1f02b57b0528a743a3561c66c030477827414e9d7867b8f6a2c1a6964736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xEE 0xE9 DUP7 0xD1 CREATE 0x2B JUMPI 0xB0 MSTORE DUP11 PUSH21 0x3A3561C66C030477827414E9D7867B8F6A2C1A6964 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "4531:4294:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4531,
									"end": 8825,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4531,
									"end": 8825,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013eee986d1f02b57b0528a743a3561c66c030477827414e9d7867b8f6a2c1a6964736f6c63430008130033",
									".code": [
										{
											"begin": 4531,
											"end": 8825,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 8825,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 8825,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4531,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4531,
											"end": 8825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 8825,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\":{\"keccak256\":\"0x8d39ec59cc2cbd18de60fd2087db2373d67aed7ad273383d3016c3a1f7aa31f1\",\"urls\":[\"bzz-raw://fe04a4602e097f7c02a0f00c0b53c809efa5733aa5f91e35a7bae584c481d657\",\"dweb:/ipfs/QmZJc5aM1N29bctquACPn2JQng6X3EoKALz5rGaCvwnkSf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n   --> contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol:368:5:\n    |\n368 |     constructor() public {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 11878,
					"file": "contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol",
					"start": 11618
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/Zero2Hero_BNB/2_Token_Deployment/ERC20_test.sol_flattened.sol",
					"exportedSymbols": {
						"BEP20": [
							1058
						],
						"Context": [
							125
						],
						"IBEP20": [
							100
						],
						"Ownable": [
							436
						],
						"SafeMath": [
							319
						]
					},
					"id": 1059,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.4",
								".0",
								"<=",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "70:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "IBEP20",
							"nameLocation": "114:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "125:62:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "199:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "236:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "235:9:0"
									},
									"scope": 100,
									"src": "190:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "249:47:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "308:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "342:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 10,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "342:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:7:0"
									},
									"scope": 100,
									"src": "299:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "353:45:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "410:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "442:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:0"
									},
									"scope": 100,
									"src": "401:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "461:41:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "514:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "544:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "544:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:15:0"
									},
									"scope": 100,
									"src": "505:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "563:48:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "623:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "657:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:0"
									},
									"scope": 100,
									"src": "614:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "670:68:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "750:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "768:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "760:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:17:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "800:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "799:9:0"
									},
									"scope": 100,
									"src": "741:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "813:197:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1022:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1039:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1031:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1058:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1050:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:35:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1084:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1084:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1083:6:0"
									},
									"scope": 100,
									"src": "1013:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1094:252:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1358:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1376:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1368:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1392:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1384:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1367:33:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1424:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:9:0"
									},
									"scope": 100,
									"src": "1349:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1437:616:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2065:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2081:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2073:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2098:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2090:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2072:33:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2124:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2124:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2123:6:0"
									},
									"scope": 100,
									"src": "2056:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2134:280:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2426:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2447:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2439:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2463:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2455:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2482:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2474:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2438:51:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2508:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2508:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2507:6:0"
									},
									"scope": 100,
									"src": "2417:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2518:148:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 90,
									"name": "Transfer",
									"nameLocation": "2675:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2700:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2684:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2722:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2706:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2734:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2726:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2683:57:0"
									},
									"src": "2669:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2745:142:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 99,
									"name": "Approval",
									"nameLocation": "2896:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2921:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2905:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2944:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2928:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2961:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2953:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2904:63:0"
									},
									"src": "2890:78:0"
								}
							],
							"scope": 1059,
							"src": "104:2866:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 125,
							"linearizedBaseContracts": [
								125
							],
							"name": "Context",
							"nameLocation": "3481:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "3658:3:0",
										"statements": []
									},
									"id": 104,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3655:2:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3658:0:0"
									},
									"scope": 125,
									"src": "3643:18:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "3719:28:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 109,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3732:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3736:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3732:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 108,
												"id": 111,
												"nodeType": "Return",
												"src": "3725:17:0"
											}
										]
									},
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "3674:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3684:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3710:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3709:9:0"
									},
									"scope": 125,
									"src": "3665:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "3808:155:0",
										"statements": [
											{
												"expression": {
													"id": 118,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "3814:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$125",
														"typeString": "contract Context"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3814:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3950:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3954:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "3950:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 117,
												"id": 122,
												"nodeType": "Return",
												"src": "3943:15:0"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "3760:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3768:2:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3794:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3794:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3793:14:0"
									},
									"scope": 125,
									"src": "3751:212:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1059,
							"src": "3472:493:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 126,
								"nodeType": "StructuredDocumentation",
								"src": "3967:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319
							],
							"name": "SafeMath",
							"nameLocation": "4539:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "4823:95:0",
										"statements": [
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4837:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 151,
														"src": "4829:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4829:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 138,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4841:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 139,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "4845:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4841:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4829:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 143,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "4860:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 144,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "4865:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4860:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4868:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4852:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4852:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "4852:46:0"
											},
											{
												"expression": {
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 137,
													"src": "4912:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 150,
												"nodeType": "Return",
												"src": "4905:8:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "4552:201:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "4765:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4777:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4769:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4788:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4780:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:22:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4814:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4813:9:0"
									},
									"scope": 319,
									"src": "4756:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "5229:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 163,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "5246:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 164,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "5249:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5252:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 162,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															169,
															197
														],
														"referencedDeclaration": 197,
														"src": "5242:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5242:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 167,
												"nodeType": "Return",
												"src": "5235:50:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "4922:237:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5171:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5183:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5175:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5194:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5186:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5174:22:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5220:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5219:9:0"
									},
									"scope": 319,
									"src": "5162:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "5649:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "5663:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 183,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "5668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5663:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 185,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5671:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5655:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5655:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5655:29:0"
											},
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "5698:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 196,
														"src": "5690:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5690:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 193,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5702:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 191,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "5706:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5702:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5690:17:0"
											},
											{
												"expression": {
													"id": 194,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 189,
													"src": "5721:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 180,
												"id": 195,
												"nodeType": "Return",
												"src": "5714:8:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "5294:257:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5563:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5575:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "5567:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5586:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "5578:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5603:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "5589:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5589:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5566:50:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "5640:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5639:9:0"
									},
									"scope": 319,
									"src": "5554:173:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "6014:352:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 207,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "6230:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6235:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6230:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 213,
												"nodeType": "IfStatement",
												"src": "6226:35:0",
												"trueBody": {
													"id": 212,
													"nodeType": "Block",
													"src": "6238:23:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6253:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 206,
															"id": 211,
															"nodeType": "Return",
															"src": "6246:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "6275:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 231,
														"src": "6267:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6267:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 219,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 216,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "6279:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 217,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "6283:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6279:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6267:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 221,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "6298:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 222,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "6302:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6298:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 224,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "6307:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6298:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6310:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6290:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6290:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "6290:56:0"
											},
											{
												"expression": {
													"id": 229,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "6360:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 206,
												"id": 230,
												"nodeType": "Return",
												"src": "6353:8:0"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "5731:213:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "5956:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5968:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "5960:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5979:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "5971:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:22:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6005:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6004:9:0"
									},
									"scope": 319,
									"src": "5947:419:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "6864:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 243,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6881:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 244,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "6884:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6887:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 242,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															249,
															277
														],
														"referencedDeclaration": 277,
														"src": "6877:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6877:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 247,
												"nodeType": "Return",
												"src": "6870:46:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6370:424:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "6806:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6818:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "6810:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6829:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "6821:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:22:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "6855:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6855:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6854:9:0"
									},
									"scope": 319,
									"src": "6797:124:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "7467:221:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 262,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "7543:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7543:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 265,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "7550:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7535:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "7535:28:0"
											},
											{
												"assignments": [
													269
												],
												"declarations": [
													{
														"constant": false,
														"id": 269,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "7577:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "7569:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7569:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7581:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "7585:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7581:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7569:17:0"
											},
											{
												"expression": {
													"id": 274,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 269,
													"src": "7682:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 260,
												"id": 275,
												"nodeType": "Return",
												"src": "7675:8:0"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "6925:444:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "7381:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7393:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7385:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7404:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7396:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7421:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7407:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 255,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7407:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7384:50:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7458:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7457:9:0"
									},
									"scope": 319,
									"src": "7372:316:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "8175:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 288,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8192:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 289,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "8195:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8198:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 287,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															294,
															318
														],
														"referencedDeclaration": 318,
														"src": "8188:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 286,
												"id": 292,
												"nodeType": "Return",
												"src": "8181:44:0"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "7692:413:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "8117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "8121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "8132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8120:22:0"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "8166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8165:9:0"
									},
									"scope": 319,
									"src": "8108:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "8765:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 307,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "8779:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8784:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8779:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 310,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "8787:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8771:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8771:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "8771:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 313,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "8813:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 314,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "8817:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 305,
												"id": 316,
												"nodeType": "Return",
												"src": "8806:12:0"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "8234:433:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "8679:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8691:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "8683:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8702:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "8694:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8719:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "8705:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 300,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8705:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8682:50:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "8756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8755:9:0"
									},
									"scope": 319,
									"src": "8670:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1059,
							"src": "4531:4294:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 321,
										"name": "Context",
										"nameLocations": [
											"9342:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "9342:7:0"
									},
									"id": 322,
									"nodeType": "InheritanceSpecifier",
									"src": "9342:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 320,
								"nodeType": "StructuredDocumentation",
								"src": "8827:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 436,
							"linearizedBaseContracts": [
								436,
								125
							],
							"name": "Ownable",
							"nameLocation": "9331:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 324,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "9370:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 436,
									"src": "9354:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 323,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9354:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 330,
									"name": "OwnershipTransferred",
									"nameLocation": "9387:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "9424:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "9408:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "9455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "9439:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9407:57:0"
									},
									"src": "9381:84:0"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "9575:121:0",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "9589:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 351,
														"src": "9581:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 334,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9581:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 336,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "9601:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9601:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9581:32:0"
											},
											{
												"expression": {
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 339,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "9619:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 340,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "9628:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9619:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "9619:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9677:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9669:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 344,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9669:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9669:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 348,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "9681:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 343,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "9648:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9648:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "EmitStatement",
												"src": "9643:48:0"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "9469:87:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 352,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9571:2:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9575:0:0"
									},
									"scope": 436,
									"src": "9559:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "9811:24:0",
										"statements": [
											{
												"expression": {
													"id": 358,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 324,
													"src": "9824:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 357,
												"id": 359,
												"nodeType": "Return",
												"src": "9817:13:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "9700:61:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "9773:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9778:2:0"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "9802:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9801:9:0"
									},
									"scope": 436,
									"src": "9764:71:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "9936:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "9950:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 366,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "9960:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9960:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9950:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9974:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9942:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9942:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "9942:67:0"
											},
											{
												"id": 372,
												"nodeType": "PlaceholderStatement",
												"src": "10015:1:0"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "9839:73:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 374,
									"name": "onlyOwner",
									"nameLocation": "9924:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9933:2:0"
									},
									"src": "9915:106:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "10393:81:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 381,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "10425:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10441:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10433:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 382,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10433:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10433:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 380,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "10404:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10404:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "EmitStatement",
												"src": "10399:45:0"
											},
											{
												"expression": {
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 388,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "10450:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10467:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10459:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 389,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10459:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10459:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10450:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "10450:19:0"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "10025:319:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 378,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 377,
												"name": "onlyOwner",
												"nameLocations": [
													"10383:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 374,
												"src": "10383:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10383:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "10356:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10373:2:0"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10393:0:0"
									},
									"scope": 436,
									"src": "10347:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "10675:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "10700:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 404,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "10681:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10681:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "10681:28:0"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "10478:132:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 402,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 401,
												"name": "onlyOwner",
												"nameLocations": [
													"10665:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 374,
												"src": "10665:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10665:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "10622:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "10648:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "10640:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10639:18:0"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10675:0:0"
									},
									"scope": 436,
									"src": "10613:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "10862:156:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 416,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "10876:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10896:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10888:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 417,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10888:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10888:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10876:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10900:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10868:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10868:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "10868:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 426,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "10973:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "10981:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 425,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "10952:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10952:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "EmitStatement",
												"src": "10947:43:0"
											},
											{
												"expression": {
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 430,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "10996:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 431,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "11005:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10996:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "10996:17:0"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "10718:86:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "10816:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "10843:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "10835:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10834:18:0"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10862:0:0"
									},
									"scope": 436,
									"src": "10807:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1059,
							"src": "9322:1698:0",
							"usedErrors": []
						},
						{
							"id": 437,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "11091:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 438,
										"name": "Context",
										"nameLocations": [
											"11135:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "11135:7:0"
									},
									"id": 439,
									"nodeType": "InheritanceSpecifier",
									"src": "11135:7:0"
								},
								{
									"baseName": {
										"id": 440,
										"name": "IBEP20",
										"nameLocations": [
											"11144:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "11144:6:0"
									},
									"id": 441,
									"nodeType": "InheritanceSpecifier",
									"src": "11144:6:0"
								},
								{
									"baseName": {
										"id": 442,
										"name": "Ownable",
										"nameLocations": [
											"11152:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 436,
										"src": "11152:7:0"
									},
									"id": 443,
									"nodeType": "InheritanceSpecifier",
									"src": "11152:7:0"
								}
							],
							"canonicalName": "BEP20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1058,
							"linearizedBaseContracts": [
								1058,
								436,
								100,
								125
							],
							"name": "BEP20",
							"nameLocation": "11126:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 446,
									"libraryName": {
										"id": 444,
										"name": "SafeMath",
										"nameLocations": [
											"11172:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 319,
										"src": "11172:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "11166:27:0",
									"typeName": {
										"id": 445,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11185:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 450,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "11235:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1058,
									"src": "11199:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 449,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 447,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11207:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11199:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 448,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11218:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 456,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "11307:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1058,
									"src": "11251:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 455,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 451,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11259:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11251:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 454,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 452,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11278:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11270:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 453,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11289:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 458,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "11341:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1058,
									"src": "11325:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 457,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11325:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "32424aa3",
									"id": 460,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "11372:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1058,
									"src": "11359:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 459,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11359:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 462,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "11402:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1058,
									"src": "11387:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 461,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11387:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 464,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "11428:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1058,
									"src": "11413:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 463,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11413:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "11639:239:0",
										"statements": [
											{
												"expression": {
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 468,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "11649:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4a7573747465737420546f6b656e",
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11657:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_1c17f9b21171bf46cde93d21ff88268fd28c832ea1a6e712dc764fe33702efc7",
															"typeString": "literal_string \"Justtest Token\""
														},
														"value": "Justtest Token"
													},
													"src": "11649:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "11649:24:0"
											},
											{
												"expression": {
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 472,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "11683:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4a5454",
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11693:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_9aab3ae19ac5f38a3adde5868bc4c7b49810ac47a26987f56ba9e17a7a63b6a6",
															"typeString": "literal_string \"JTT\""
														},
														"value": "JTT"
													},
													"src": "11683:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "11683:15:0"
											},
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 476,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "11708:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11720:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11708:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "11708:14:0"
											},
											{
												"expression": {
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 480,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "11732:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_2250000000000000000000000_by_1",
															"typeString": "int_const 2250000000000000000000000"
														},
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32323530303030",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11747:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2250000_by_1",
																"typeString": "int_const 2250000"
															},
															"value": "2250000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11757:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11761:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "11757:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "11747:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2250000000000000000000000_by_1",
															"typeString": "int_const 2250000000000000000000000"
														}
													},
													"src": "11732:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "11732:31:0"
											},
											{
												"expression": {
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 488,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "11773:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 491,
														"indexExpression": {
															"expression": {
																"id": 489,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11783:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11787:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11783:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11773:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 492,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "11797:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11773:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "11773:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11842:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11834:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 496,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11834:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11834:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 500,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11846:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11850:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11846:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "11858:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "11825:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11825:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "EmitStatement",
												"src": "11820:51:0"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "11442:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 506,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11629:2:0"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11639:0:0"
									},
									"scope": 1058,
									"src": "11618:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										31
									],
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "11946:31:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 512,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "11963:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11963:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 511,
												"id": 514,
												"nodeType": "Return",
												"src": "11956:14:0"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "11893:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 508,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11918:8:0"
									},
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11901:2:0"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "11937:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11936:9:0"
									},
									"scope": 1058,
									"src": "11884:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										25
									],
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "12111:29:0",
										"statements": [
											{
												"expression": {
													"id": 523,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 462,
													"src": "12128:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 522,
												"id": 524,
												"nodeType": "Return",
												"src": "12121:12:0"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "11983:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12051:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 519,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12078:8:0"
									},
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12055:2:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "12096:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 520,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12096:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12095:15:0"
									},
									"scope": 1058,
									"src": "12042:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										19
									],
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "12324:31:0",
										"statements": [
											{
												"expression": {
													"id": 533,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 464,
													"src": "12341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 532,
												"id": 534,
												"nodeType": "Return",
												"src": "12334:14:0"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "12146:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12262:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 529,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12291:8:0"
									},
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12268:2:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "12309:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 530,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12309:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12308:15:0"
									},
									"scope": 1058,
									"src": "12253:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										13
									],
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "13053:33:0",
										"statements": [
											{
												"expression": {
													"id": 543,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 460,
													"src": "13070:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 542,
												"id": 544,
												"nodeType": "Return",
												"src": "13063:16:0"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "12361:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "12997:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 539,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13028:8:0"
									},
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13005:2:0"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "13046:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 540,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13046:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13045:7:0"
									},
									"scope": 1058,
									"src": "12988:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										7
									],
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "13216:36:0",
										"statements": [
											{
												"expression": {
													"id": 553,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 458,
													"src": "13233:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 552,
												"id": 554,
												"nodeType": "Return",
												"src": "13226:19:0"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "13092:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13155:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 549,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13189:8:0"
									},
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13166:2:0"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "13207:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13206:9:0"
									},
									"scope": 1058,
									"src": "13146:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										39
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "13393:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 565,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "13410:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 567,
													"indexExpression": {
														"id": 566,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "13420:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13410:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 564,
												"id": 568,
												"nodeType": "Return",
												"src": "13403:25:0"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "13258:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13319:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 561,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13366:8:0"
									},
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13337:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "13329:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13329:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13328:17:0"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "13384:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13383:9:0"
									},
									"scope": 1058,
									"src": "13310:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										49
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "13716:104:0",
										"statements": [
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "13734:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "13726:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 581,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13726:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 583,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "13742:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13742:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13726:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "13774:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 588,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "13781:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "13785:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 586,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "13764:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13764:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "13764:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 580,
												"id": 593,
												"nodeType": "Return",
												"src": "13802:11:0"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "13441:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "13640:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 577,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13692:8:0"
									},
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13657:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "13649:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13669:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "13661:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13648:28:0"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "13710:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13710:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13709:6:0"
									},
									"scope": 1058,
									"src": "13631:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										59
									],
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "13976:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 606,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "13993:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 608,
														"indexExpression": {
															"id": 607,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "14005:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13993:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 610,
													"indexExpression": {
														"id": 609,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "14012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13993:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 605,
												"id": 611,
												"nodeType": "Return",
												"src": "13986:34:0"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "13826:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "13887:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 602,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13949:8:0"
									},
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13905:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "13897:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13897:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13920:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "13912:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13896:32:0"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "13967:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13966:9:0"
									},
									"scope": 1058,
									"src": "13878:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										69
									],
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "14424:108:0",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14442:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 637,
														"src": "14434:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 624,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14434:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 628,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 626,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "14450:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14450:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14434:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 630,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "14481:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 631,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "14488:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "14497:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "14472:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14472:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "14472:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14521:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 623,
												"id": 636,
												"nodeType": "Return",
												"src": "14514:11:0"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "14033:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14344:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 620,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14400:8:0"
									},
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14360:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "14352:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14377:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "14369:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:33:0"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "14418:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 621,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14418:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14417:6:0"
									},
									"scope": 1058,
									"src": "14335:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										81
									],
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "15197:153:0",
										"statements": [
											{
												"assignments": [
													652
												],
												"declarations": [
													{
														"constant": false,
														"id": 652,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15215:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "15207:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 651,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15207:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 655,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 653,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "15225:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15225:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15207:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "15263:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 658,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "15269:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "15278:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 656,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "15247:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15247:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "15247:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "15305:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 664,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "15311:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "15315:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "15295:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15295:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "15295:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15339:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 650,
												"id": 669,
												"nodeType": "Return",
												"src": "15332:11:0"
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "14538:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15103:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 647,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15173:8:0"
									},
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15124:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "15116:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15138:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "15130:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15150:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "15142:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15115:42:0"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "15191:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15191:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15190:6:0"
									},
									"scope": 1058,
									"src": "15094:256:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "15839:140:0",
										"statements": [
											{
												"assignments": [
													682
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15857:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 699,
														"src": "15849:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 681,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15849:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 683,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "15865:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15865:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15849:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "15896:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 688,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "15903:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 690,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "15922:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 691,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "15929:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 689,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "15912:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15912:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 693,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "15940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15912:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 686,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "15887:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15887:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "15887:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15968:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 680,
												"id": 698,
												"nodeType": "Return",
												"src": "15961:11:0"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "15356:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "15754:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15780:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "15772:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15772:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "15797:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "15789:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15771:37:0"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "15833:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 678,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15833:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15832:6:0"
									},
									"scope": 1058,
									"src": "15745:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "16565:328:0",
										"statements": [
											{
												"assignments": [
													711
												],
												"declarations": [
													{
														"constant": false,
														"id": 711,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16583:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 740,
														"src": "16575:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 710,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16575:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 714,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 712,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "16591:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16591:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16575:28:0"
											},
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "16621:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 740,
														"src": "16613:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16613:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 721,
												"initialValue": {
													"arguments": [
														{
															"id": 718,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "16650:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "16657:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 717,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "16640:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16640:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16613:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 723,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "16683:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 724,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "16703:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16683:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16720:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16675:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16675:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "16675:85:0"
											},
											{
												"id": 737,
												"nodeType": "UncheckedBlock",
												"src": "16770:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 730,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "16803:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 731,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "16810:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 732,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 716,
																		"src": "16819:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 733,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 705,
																		"src": "16838:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16819:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 729,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "16794:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16794:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 736,
														"nodeType": "ExpressionStatement",
														"src": "16794:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16882:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 709,
												"id": 739,
												"nodeType": "Return",
												"src": "16875:11:0"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "15985:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "16475:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16501:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "16493:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "16518:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "16510:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16492:42:0"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "16559:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 707,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16559:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16558:6:0"
									},
									"scope": 1058,
									"src": "16466:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "17425:710:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 752,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "17443:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17459:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17451:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 753,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17451:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17451:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17443:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17463:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17435:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17435:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "17435:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 762,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "17521:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17535:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17527:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 763,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17527:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17527:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17521:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17539:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 761,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17513:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17513:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "17513:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 772,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "17609:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 773,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "17615:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "17619:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 771,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "17588:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17588:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "17588:38:0"
											},
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "17645:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 817,
														"src": "17637:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 777,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17637:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 782,
												"initialValue": {
													"baseExpression": {
														"id": 779,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "17659:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 781,
													"indexExpression": {
														"id": 780,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "17669:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17659:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17637:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 784,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "17692:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 785,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "17707:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17692:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17715:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17684:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17684:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "17684:72:0"
											},
											{
												"id": 804,
												"nodeType": "UncheckedBlock",
												"src": "17766:273:0",
												"statements": [
													{
														"expression": {
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 790,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "17790:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 792,
																"indexExpression": {
																	"id": 791,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "17800:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "17790:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 793,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "17808:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 794,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "17822:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17808:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17790:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 797,
														"nodeType": "ExpressionStatement",
														"src": "17790:38:0"
													},
													{
														"expression": {
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 798,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "18005:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 800,
																"indexExpression": {
																	"id": 799,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "18015:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "18005:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 801,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "18022:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18005:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 803,
														"nodeType": "ExpressionStatement",
														"src": "18005:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 806,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "18063:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "18069:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "18073:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 805,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "18054:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18054:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "EmitStatement",
												"src": "18049:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 812,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "18111:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "18117:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "18121:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 811,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "18091:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18091:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "18091:37:0"
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "16899:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "17356:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17374:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "17366:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17388:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "17380:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17400:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "17392:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17365:42:0"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17425:0:0"
									},
									"scope": 1058,
									"src": "17347:788:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "18476:470:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 827,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "18494:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18513:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18505:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 828,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18505:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18505:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18494:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18517:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 826,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18486:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18486:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "18486:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18591:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18583:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18583:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18583:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "18595:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 842,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "18604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 836,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "18562:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18562:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "18562:49:0"
											},
											{
												"expression": {
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 845,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "18622:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 846,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "18638:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18622:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "18622:22:0"
											},
											{
												"id": 855,
												"nodeType": "UncheckedBlock",
												"src": "18654:175:0",
												"statements": [
													{
														"expression": {
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 849,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "18790:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 851,
																"indexExpression": {
																	"id": 850,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "18800:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "18790:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 852,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "18812:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18790:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 854,
														"nodeType": "ExpressionStatement",
														"src": "18790:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18860:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18852:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 857,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18852:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18852:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "18864:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 862,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "18873:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 856,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "18843:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18843:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "EmitStatement",
												"src": "18838:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18919:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18911:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 866,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18911:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18911:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 870,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "18923:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "18932:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 865,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "18891:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18891:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "18891:48:0"
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "18141:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18420:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18434:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "18426:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18451:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "18443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18425:33:0"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18476:0:0"
									},
									"scope": 1058,
									"src": "18411:535:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "19331:594:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 884,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "19349:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19368:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19360:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 885,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19360:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19360:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19349:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19372:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 883,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19341:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19341:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "19341:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "19440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19457:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19449:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19449:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19449:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "19461:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "19419:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19419:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "19419:49:0"
											},
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "19487:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 946,
														"src": "19479:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 902,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19479:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"initialValue": {
													"baseExpression": {
														"id": 904,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "19504:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 906,
													"indexExpression": {
														"id": 905,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "19514:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19504:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19479:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 909,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "19540:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 910,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "19558:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19540:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19566:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 908,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19532:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19532:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "19532:71:0"
											},
											{
												"id": 927,
												"nodeType": "UncheckedBlock",
												"src": "19613:194:0",
												"statements": [
													{
														"expression": {
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 915,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "19637:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 917,
																"indexExpression": {
																	"id": 916,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "19647:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19637:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 918,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "19658:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 919,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "19675:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19658:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19637:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 922,
														"nodeType": "ExpressionStatement",
														"src": "19637:44:0"
													},
													{
														"expression": {
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 923,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "19774:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 924,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "19790:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19774:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 926,
														"nodeType": "ExpressionStatement",
														"src": "19774:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 929,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "19831:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19848:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19840:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 930,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19840:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19840:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "19852:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 928,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "19822:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19822:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "EmitStatement",
												"src": "19817:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 938,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "19890:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19907:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19899:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 939,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19899:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19899:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "19911:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 937,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "19870:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19870:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "19870:48:0"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "18952:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19275:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19289:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "19281:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19306:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "19298:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19298:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19280:33:0"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19331:0:0"
									},
									"scope": 1058,
									"src": "19266:659:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "20431:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 958,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "20449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20466:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20458:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 959,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20458:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20458:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20449:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20470:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 957,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20441:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20441:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "20441:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 968,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "20527:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20546:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20538:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 969,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20538:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20538:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20527:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20550:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 967,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20519:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "20519:68:0"
											},
											{
												"expression": {
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 977,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "20598:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 980,
															"indexExpression": {
																"id": 978,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "20610:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20598:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 981,
														"indexExpression": {
															"id": 979,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "20617:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20598:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 982,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "20628:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20598:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "20598:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 986,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "20658:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "20665:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 988,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "20674:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 985,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "20649:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20649:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "EmitStatement",
												"src": "20644:37:0"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "19931:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20357:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20374:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "20366:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20389:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "20381:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20406:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "20398:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20365:48:0"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20431:0:0"
									},
									"scope": 1058,
									"src": "20348:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "21059:321:0",
										"statements": [
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21077:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1034,
														"src": "21069:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1002,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21069:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"arguments": [
														{
															"id": 1005,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "21106:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "21113:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1004,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "21096:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21096:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21069:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1009,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "21135:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21160:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1011,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21160:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1010,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21155:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21155:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21169:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21155:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21135:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1033,
												"nodeType": "IfStatement",
												"src": "21131:243:0",
												"trueBody": {
													"id": 1032,
													"nodeType": "Block",
													"src": "21174:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1017,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1003,
																			"src": "21196:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1018,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 999,
																			"src": "21216:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21196:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21224:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1016,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "21188:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21188:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1022,
															"nodeType": "ExpressionStatement",
															"src": "21188:68:0"
														},
														{
															"id": 1031,
															"nodeType": "UncheckedBlock",
															"src": "21270:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1024,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 995,
																				"src": "21307:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1025,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "21314:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1026,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1003,
																					"src": "21323:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1027,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 999,
																					"src": "21342:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21323:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1023,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "21298:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21298:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1030,
																	"nodeType": "ExpressionStatement",
																	"src": "21298:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "20694:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "20978:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "20994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21017:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "21009:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21034:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "21026:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20993:48:0"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21059:0:0"
									},
									"scope": 1058,
									"src": "20969:411:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "22053:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "21386:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "21973:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22002:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "21994:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22016:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "22008:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22028:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "22020:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21993:42:0"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22053:0:0"
									},
									"scope": 1058,
									"src": "21964:91:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "22731:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "22061:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "22652:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22680:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "22672:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22694:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "22686:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22706:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "22698:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22671:42:0"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22731:0:0"
									},
									"scope": 1058,
									"src": "22643:90:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1059,
							"src": "11117:11620:0",
							"usedErrors": []
						}
					],
					"src": "70:22667:0"
				},
				"id": 0
			}
		}
	}
}